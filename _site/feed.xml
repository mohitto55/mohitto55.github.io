<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-04-11T13:52:43+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Mohitto55 Note</title><subtitle>모히또의 노트</subtitle><author><name>Mohitto55</name></author><entry><title type="html">[Unity] 정점이 8개인 Cube 만들기</title><link href="http://localhost:4000/unity/Unity-%EC%A0%95%EC%A0%908%EA%B0%9C-%ED%81%90%EB%B8%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0/" rel="alternate" type="text/html" title="[Unity] 정점이 8개인 Cube 만들기" /><published>2024-04-11T00:00:00+09:00</published><updated>2024-04-11T00:00:00+09:00</updated><id>http://localhost:4000/unity/Unity%20%EC%A0%95%EC%A0%908%EA%B0%9C%20%ED%81%90%EB%B8%8C%20%EB%A7%8C%EB%93%A4%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/unity/Unity-%EC%A0%95%EC%A0%908%EA%B0%9C-%ED%81%90%EB%B8%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0/"><![CDATA[<p>유니티 큐브의 정점갯수는 기본적으로 24개다.</p>

<p>정점 8개만 이용해도 큐브를 만들 수 있지 않나 싶어서 만들어보았다.</p>

<h2 id="cube-만들기">Cube 만들기</h2>
<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/13883c6d-2d30-4f2f-914c-f380fcf18748" alt="image" /><em>vertex 순서</em></p>

<p>우선 정점을 만들어준다. 정점의 순서는 위와 같이 정했으며 이를 구현한다.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kt">float</span> <span class="n">halfWidth</span> <span class="p">=</span> <span class="n">width</span> <span class="p">/</span> <span class="m">2</span><span class="p">;</span>
    <span class="kt">float</span> <span class="n">halfHeight</span> <span class="p">=</span> <span class="n">height</span> <span class="p">/</span> <span class="m">2</span><span class="p">;</span>
    <span class="n">List</span><span class="p">&lt;</span><span class="n">Vector3</span><span class="p">&gt;</span> <span class="n">vertexs</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Vector3</span><span class="p">&gt;();</span>

    <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">halfWidth</span><span class="p">,</span> <span class="p">-</span><span class="n">halfHeight</span><span class="p">,</span> <span class="p">-</span><span class="n">halfWidth</span><span class="p">));</span>
    <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">halfWidth</span><span class="p">,</span> <span class="p">-</span><span class="n">halfHeight</span><span class="p">,</span> <span class="n">halfWidth</span><span class="p">));</span>
    <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">halfWidth</span><span class="p">,</span> <span class="n">halfHeight</span><span class="p">,</span> <span class="n">halfWidth</span><span class="p">));</span>
    <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">halfWidth</span><span class="p">,</span> <span class="n">halfHeight</span><span class="p">,</span> <span class="p">-</span><span class="n">halfWidth</span><span class="p">));</span>
    <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">halfWidth</span><span class="p">,</span> <span class="p">-</span><span class="n">halfHeight</span><span class="p">,</span> <span class="p">-</span><span class="n">halfWidth</span><span class="p">));</span>
    <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">halfWidth</span><span class="p">,</span> <span class="p">-</span><span class="n">halfHeight</span><span class="p">,</span> <span class="n">halfWidth</span><span class="p">));</span>
    <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">halfWidth</span><span class="p">,</span> <span class="n">halfHeight</span><span class="p">,</span> <span class="n">halfWidth</span><span class="p">));</span>
    <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">halfWidth</span><span class="p">,</span> <span class="n">halfHeight</span><span class="p">,</span> <span class="p">-</span><span class="n">halfWidth</span><span class="p">));</span>
</code></pre></div></div>

<hr />
<p>vertex 정보를 토대로 triangle를 지정하여준다.
방향은 시계방향으로 해야 큐브 바깥쪽 방향으로 메쉬가 생성된다.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">triangles</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;()</span>
    <span class="p">{</span>
        <span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">,</span>
        <span class="m">0</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">4</span><span class="p">,</span>
        <span class="m">7</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">5</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">5</span><span class="p">,</span><span class="m">4</span><span class="p">,</span>
        <span class="m">6</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">5</span><span class="p">,</span>
        <span class="m">6</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">3</span><span class="p">,</span>
        <span class="m">5</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">5</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">4</span>
    <span class="p">};</span>
</code></pre></div></div>

<p>이렇게 생성한 정보를 토대로 Mesh에 옮겨준다.</p>
<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">mesh</span><span class="p">.</span><span class="n">vertices</span> <span class="p">=</span> <span class="n">vertexs</span><span class="p">.</span><span class="nf">ToArray</span><span class="p">();</span>
    <span class="n">mesh</span><span class="p">.</span><span class="n">triangles</span> <span class="p">=</span> <span class="n">triangles</span><span class="p">.</span><span class="nf">ToArray</span><span class="p">();</span>

    <span class="n">mesh</span><span class="p">.</span><span class="nf">RecalculateBounds</span><span class="p">();</span>
    <span class="n">GetComponent</span><span class="p">&lt;</span><span class="n">MeshFilter</span><span class="p">&gt;().</span><span class="n">mesh</span> <span class="p">=</span> <span class="n">mesh</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="전체-코드">전체 코드</h3>
<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">void</span> <span class="nf">GenerateCube</span><span class="p">(</span><span class="kt">float</span> <span class="n">width</span><span class="p">,</span> <span class="kt">float</span> <span class="n">height</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Mesh</span> <span class="n">mesh</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Mesh</span><span class="p">();</span>

        <span class="kt">float</span> <span class="n">halfWidth</span> <span class="p">=</span> <span class="n">width</span> <span class="p">/</span> <span class="m">2</span><span class="p">;</span>
        <span class="kt">float</span> <span class="n">halfHeight</span> <span class="p">=</span> <span class="n">height</span> <span class="p">/</span> <span class="m">2</span><span class="p">;</span>
        <span class="n">List</span><span class="p">&lt;</span><span class="n">Vector3</span><span class="p">&gt;</span> <span class="n">vertexs</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Vector3</span><span class="p">&gt;();</span>

        <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">halfWidth</span><span class="p">,</span> <span class="p">-</span><span class="n">halfHeight</span><span class="p">,</span> <span class="p">-</span><span class="n">halfWidth</span><span class="p">));</span>
        <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">halfWidth</span><span class="p">,</span> <span class="p">-</span><span class="n">halfHeight</span><span class="p">,</span> <span class="n">halfWidth</span><span class="p">));</span>
        <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">halfWidth</span><span class="p">,</span> <span class="n">halfHeight</span><span class="p">,</span> <span class="n">halfWidth</span><span class="p">));</span>
        <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">halfWidth</span><span class="p">,</span> <span class="n">halfHeight</span><span class="p">,</span> <span class="p">-</span><span class="n">halfWidth</span><span class="p">));</span>
        <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">halfWidth</span><span class="p">,</span> <span class="p">-</span><span class="n">halfHeight</span><span class="p">,</span> <span class="p">-</span><span class="n">halfWidth</span><span class="p">));</span>
        <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">halfWidth</span><span class="p">,</span> <span class="p">-</span><span class="n">halfHeight</span><span class="p">,</span> <span class="n">halfWidth</span><span class="p">));</span>
        <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">halfWidth</span><span class="p">,</span> <span class="n">halfHeight</span><span class="p">,</span> <span class="n">halfWidth</span><span class="p">));</span>
        <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">halfWidth</span><span class="p">,</span> <span class="n">halfHeight</span><span class="p">,</span> <span class="p">-</span><span class="n">halfWidth</span><span class="p">));</span>

        <span class="n">List</span><span class="p">&lt;</span><span class="n">Vector2</span><span class="p">&gt;</span> <span class="n">uvs</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Vector2</span><span class="p">&gt;</span>
        <span class="p">{</span>
            <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0f</span><span class="p">,</span> <span class="m">1f</span><span class="p">),</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">1f</span><span class="p">,</span><span class="m">1f</span><span class="p">),</span>
            <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0f</span><span class="p">,</span> <span class="m">0f</span><span class="p">),</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">1f</span><span class="p">,</span><span class="m">0f</span><span class="p">),</span>
            <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0f</span><span class="p">,</span> <span class="m">1f</span><span class="p">),</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">1f</span><span class="p">,</span><span class="m">1f</span><span class="p">),</span>
            <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0f</span><span class="p">,</span> <span class="m">0f</span><span class="p">),</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">1f</span><span class="p">,</span><span class="m">0f</span><span class="p">)</span>
        <span class="p">};</span>

        <span class="n">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">triangles</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;()</span>
        <span class="p">{</span>
            <span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">,</span>
            <span class="m">0</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">4</span><span class="p">,</span>
            <span class="m">7</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">5</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">5</span><span class="p">,</span><span class="m">4</span><span class="p">,</span>
            <span class="m">6</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">5</span><span class="p">,</span>
            <span class="m">6</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">3</span><span class="p">,</span>
            <span class="m">5</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">5</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">4</span>
        <span class="p">};</span>
        
        <span class="n">mesh</span><span class="p">.</span><span class="n">vertices</span> <span class="p">=</span> <span class="n">vertexs</span><span class="p">.</span><span class="nf">ToArray</span><span class="p">();</span>
        <span class="n">mesh</span><span class="p">.</span><span class="n">triangles</span> <span class="p">=</span> <span class="n">triangles</span><span class="p">.</span><span class="nf">ToArray</span><span class="p">();</span>

        <span class="n">mesh</span><span class="p">.</span><span class="nf">RecalculateBounds</span><span class="p">();</span>
        <span class="n">GetComponent</span><span class="p">&lt;</span><span class="n">MeshFilter</span><span class="p">&gt;().</span><span class="n">mesh</span> <span class="p">=</span> <span class="n">mesh</span><span class="p">;</span>
    <span class="p">}</span>
</code></pre></div></div>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/aa900bc4-c0f5-4a9d-a086-4816e876855e" alt="image" /><em>완성된 정점8개 큐브</em></p>

<h2 id="단점">단점</h2>
<p>정점 8개만 있어도 큐브를 만들 수 있지만 문제는 uv를 통한 라이팅과 Material 표현이 불가능했다.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">List</span><span class="p">&lt;</span><span class="n">Vector2</span><span class="p">&gt;</span> <span class="n">uvs</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Vector2</span><span class="p">&gt;</span>
    <span class="p">{</span>
        <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0f</span><span class="p">,</span> <span class="m">1f</span><span class="p">),</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">1f</span><span class="p">,</span><span class="m">1f</span><span class="p">),</span>
        <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0f</span><span class="p">,</span> <span class="m">0f</span><span class="p">),</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">1f</span><span class="p">,</span><span class="m">0f</span><span class="p">),</span>
        <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0f</span><span class="p">,</span> <span class="m">1f</span><span class="p">),</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">1f</span><span class="p">,</span><span class="m">1f</span><span class="p">),</span>
        <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0f</span><span class="p">,</span> <span class="m">0f</span><span class="p">),</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">1f</span><span class="p">,</span><span class="m">0f</span><span class="p">)</span>
    <span class="p">};</span>
</code></pre></div></div>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/5cb348fc-4c48-490f-bc7f-2cbdfb9a1f93" alt="image" /><em>깨져버린 Material</em></p>

<hr />

<h3 id="원인">원인</h3>
<p>이는 uv하나가 표현해야할 면이 3개이지만 1개를 초과하는 정보를 담당할 수 없기 떄문이다. 각 면마다 사용해야할 uv 정보가 다 다른데 겹쳐서 저렇게 깨져버린 것이다.</p>

<p>그래서 유니티에선 정점을 24개로 구현해 각 면마다 사용할 uv정보를 담아주었다.</p>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/5e4a0aa5-69de-44e6-9cdf-8c9c913cd856" alt="image" /><em>유니티 Cube</em></p>

<div class="Reference">
<div class="callout-header"> </div>
<p>
<a href="https://bloodstrawberry.tistory.com/1016">https://bloodstrawberry.tistory.com/1016</a>
</p>
</div>]]></content><author><name>Mohitto55</name></author><category term="unity" /><category term="Unity" /><category term="Mesh" /><category term="Cube" /><category term="UV" /><summary type="html"><![CDATA[유니티 큐브의 정점갯수는 기본적으로 24개다.]]></summary></entry><entry><title type="html">[Obsidian] CSS 적용하며 PDF로 내보내는법</title><link href="http://localhost:4000/obsidian/Obsidian-PDF-Export/" rel="alternate" type="text/html" title="[Obsidian] CSS 적용하며 PDF로 내보내는법" /><published>2024-04-06T00:00:00+09:00</published><updated>2024-04-06T00:00:00+09:00</updated><id>http://localhost:4000/obsidian/Obsidian%20PDF%20Export</id><content type="html" xml:base="http://localhost:4000/obsidian/Obsidian-PDF-Export/"><![CDATA[<h2 id="pdf-출력">PDF 출력</h2>
<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/10ba20e0-7a36-4e9f-98d0-46aea8136612" alt="image" /></p>

<p>옵시디언을 통해 내용을 정리하고 다양한 기능들을 이용해 꾸민뒤 PDF로 변환해야할 때가 있다. 그런데 이상하게도 css로 열심히 꾸며도 PDF로 출력만 하면은 제대로 적용이 되지 않은채 변환되곤한다.</p>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/ee11d162-e739-44b9-b083-f7a466eb63c9" alt="image" /><em>같은 내용 다른 느낌</em></p>

<p>어떻게든 CSS를 제대로 적용시키고 싶어서 ITEXT로 PDF로 변환도 해보고 기존 CSS를 수정하는 등 여러 시행착오를 거쳐서 변환 전 모습과 거의 비슷하게 만드는데 성공했다.</p>

<h2 id="원인">원인</h2>
<p>옵시디언에선 일반적인 노트에서 적용되는 css와 PDF 출력시 적용되는 css가 따로 있다. 그렇게 PDF로 적용되는 CSS는 <font color="dodgerred">@media print</font>라는 body 안에 작성되어야 한다. 나의 경우 AnuPpuccin 테마를 이용중인데 이 테마는 PDF 출력시 css 적용 기능을 대부분 지원하지 않고 있다. 왜 그런가 하니</p>

<blockquote>
  <p>afaik this is an issue with the default theme as well, though i’ve made some adjustments to make it more readable in dark mode. the major problem is that the white background cannot be changed with any kind of CSS.</p>
  <ul>
    <li><a href="https://github.com/AnubisNekhet/AnuPpuccin/issues/48">아누푸친 개발자</a></li>
  </ul>
</blockquote>

<p>요약하면 흰 배경을 바꾸는 기능이 없다고 하는 것인데 아마 많은 기능이 이런 이유로 지원되지 않는 듯 싶다. 그런데 찾아보니 배경 색을 바꾸는 기능이 존재하였는데 테마 개발자가 몰랐든지 뭔가 이유가 있지 않을까 싶다.</p>

<h2 id="pdf-출력-전용-css-작성">PDF 출력 전용 CSS 작성</h2>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">@media</span> <span class="n">print</span><span class="p">{</span>
<span class="p">}</span>
</code></pre></div></div>
<p>PDF에서 적용되는 css를 작성하기 위해선 <code class="language-plaintext highlighter-rouge">@media print</code>안에서 작성해야 한다. 그럼 이안에 테마에서 쓰는 css를 모두 복사 붙여넣기 하면 되는 것 아닌가 싶지만 아쉽게도 되지 않았다. 그래서 내용을 모두 하나 하나 작성해야하는데 다행히도 누군가 템플릿을 하나 작성해주었다.</p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">/* Obsidian snippet to style output of pdf exports
 */</span>

<span class="k">@media</span> <span class="n">print</span> <span class="p">{</span>

  <span class="c">/* set your preferred fonts here.
   */</span>

  <span class="nd">:root</span> <span class="p">{</span>
    <span class="py">--body-font-family</span><span class="p">:</span> <span class="s1">"Newsreader Text"</span><span class="p">,</span> <span class="n">TimesNewRoman</span><span class="p">,</span> <span class="s1">"Times New Roman"</span><span class="p">,</span> <span class="n">Times</span><span class="p">,</span> <span class="n">Baskerville</span><span class="p">,</span> <span class="n">Georgia</span><span class="p">,</span> <span class="nb">serif</span><span class="p">;</span>
    <span class="py">--header-font-family</span><span class="p">:</span> <span class="s1">"Century Gothic"</span><span class="p">,</span> <span class="n">CenturyGothic</span><span class="p">,</span> <span class="n">AppleGothic</span><span class="p">,</span> <span class="nb">sans-serif</span><span class="p">;</span>
    <span class="py">--code-font-family</span><span class="p">:</span> <span class="n">MonoLisa</span><span class="p">,</span> <span class="n">Menlo</span><span class="p">,</span> <span class="n">SFMono-Regular</span><span class="p">,</span> <span class="n">Consolas</span><span class="p">,</span> <span class="s1">"Roboto Mono"</span><span class="p">,</span> <span class="nb">monospace</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="nt">body</span> <span class="p">{</span>
    <span class="nl">width</span><span class="p">:</span> <span class="m">100%</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">margin</span><span class="p">:</span> <span class="m">0</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">padding</span><span class="p">:</span> <span class="m">0</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">background</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="c">/* If you find your font settings ae not being used for an element,
   * Add it below. You can fund the element by inspecting the document
   * in "Reading" mode in the console.
   */</span>
  <span class="nt">body</span><span class="o">,</span> <span class="nt">p</span><span class="o">,</span> <span class="nt">li</span><span class="o">,</span> <span class="nt">div</span><span class="nc">.callout</span> <span class="p">{</span>
    <span class="nl">line-height</span><span class="p">:</span> <span class="m">1.4</span><span class="p">;</span>
    <span class="nl">word-spacing</span><span class="p">:</span> <span class="m">1.1pt</span><span class="p">;</span>
    <span class="nl">letter-spacing</span><span class="p">:</span> <span class="m">0.2pt</span><span class="p">;</span>
    <span class="nl">font-family</span><span class="p">:</span> <span class="n">var</span><span class="p">(</span><span class="n">--body-font-family</span><span class="p">);</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">12pt</span>
  <span class="p">}</span>

  <span class="c">/* */</span>

  <span class="nt">h1</span><span class="o">,</span> <span class="nt">h2</span><span class="o">,</span> <span class="nt">h3</span><span class="o">,</span> <span class="nt">h4</span><span class="o">,</span> <span class="nt">h5</span><span class="o">,</span> <span class="nt">h6</span> <span class="p">{</span>
    <span class="nl">font-family</span><span class="p">:</span> <span class="n">var</span><span class="p">(</span><span class="n">--header-font-family</span><span class="p">);</span>
    <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">normal</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">h1</span> <span class="p">{</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">19pt</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">h2</span> <span class="p">{</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">17pt</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">h3</span> <span class="p">{</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">15pt</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">h4</span><span class="o">,</span> <span class="nt">h5</span><span class="o">,</span> <span class="nt">h6</span> <span class="p">{</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">12pt</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">code</span><span class="o">,</span> <span class="nt">code</span><span class="o">[</span><span class="nt">class</span><span class="o">*=</span><span class="s1">"language-"</span><span class="o">],</span>
  <span class="nt">pre</span><span class="o">,</span> <span class="nt">pre</span><span class="o">[</span><span class="nt">class</span><span class="o">*=</span><span class="s1">"language-"</span><span class="o">]</span> <span class="p">{</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">10pt</span><span class="p">;</span>
    <span class="nl">font-family</span><span class="p">:</span> <span class="n">var</span><span class="p">(</span><span class="n">--code-font-family</span><span class="p">);</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">black</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">background</span><span class="p">:</span> <span class="nb">none</span> <span class="cp">!important</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="nt">pre</span><span class="o">,</span>
  <span class="nt">code</span> <span class="nt">span</span><span class="o">,</span>
  <span class="nt">code</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">black</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">code</span> <span class="p">{</span>
    <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="no">darkgray</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">padding</span><span class="p">:</span> <span class="m">0</span> <span class="m">0.2em</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">line-height</span><span class="p">:</span> <span class="n">initial</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">border-radius</span><span class="p">:</span> <span class="m">4px</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">pre</span> <span class="p">{</span>
    <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="no">darkgray</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">margin</span><span class="p">:</span> <span class="m">1em</span> <span class="m">0px</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">padding</span><span class="p">:</span> <span class="m">0.5em</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">border-radius</span><span class="p">:</span> <span class="m">4px</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">pre</span> <span class="o">&gt;</span> <span class="nt">code</span> <span class="p">{</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">12px</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">border</span><span class="p">:</span> <span class="nb">none</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">border-radius</span><span class="p">:</span> <span class="m">0</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">border-radius</span><span class="p">:</span> <span class="m">4px</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">blockquote</span> <span class="p">{</span>
    <span class="nl">margin</span><span class="p">:</span> <span class="m">1.3em</span><span class="p">;</span>
    <span class="nl">padding</span><span class="p">:</span> <span class="m">1em</span><span class="p">;</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">10pt</span><span class="p">;</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">darkslategray</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">hr</span> <span class="p">{</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="m">#ccc</span>
  <span class="p">}</span>

  <span class="nt">img</span> <span class="p">{</span>
    <span class="nl">display</span><span class="p">:</span><span class="nb">block</span><span class="p">;</span>
    <span class="nl">margin</span><span class="p">:</span> <span class="m">1em</span> <span class="m">0</span>
  <span class="p">}</span>

  <span class="nt">a</span> <span class="nt">img</span> <span class="p">{</span>
    <span class="nl">border</span><span class="p">:</span> <span class="nb">none</span>
  <span class="p">}</span>

  <span class="nt">table</span> <span class="p">{</span>
    <span class="nl">margin</span><span class="p">:</span> <span class="m">1px</span><span class="p">;</span>
    <span class="nl">text-align</span><span class="p">:</span> <span class="nb">left</span>
  <span class="p">}</span>

  <span class="nt">th</span> <span class="p">{</span>
    <span class="nl">border-bottom</span><span class="p">:</span> <span class="m">1px</span> <span class="n">aolis</span> <span class="m">#333</span>
  <span class="p">}</span>

  <span class="nt">td</span> <span class="p">{</span>
    <span class="nl">border-bottom</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="m">#333</span>
  <span class="p">}</span>

  <span class="nt">th</span><span class="o">,</span><span class="nt">td</span><span class="o">,</span> <span class="nt">tr</span> <span class="p">{</span>
    <span class="nl">padding</span><span class="p">:</span> <span class="m">4px</span> <span class="m">10px</span> <span class="m">4px</span> <span class="m">0</span><span class="p">;</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">black</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">background</span><span class="p">:</span> <span class="nb">none</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">tfoot</span> <span class="p">{</span>
    <span class="nl">font-style</span><span class="p">:</span> <span class="nb">italic</span>
  <span class="p">}</span>

  <span class="nt">caption</span> <span class="p">{</span>
    <span class="nl">background</span><span class="p">:</span> <span class="m">#fff</span><span class="p">;</span>
    <span class="nl">margin-bottom</span><span class="p">:</span> <span class="m">2em</span><span class="p">;</span>
    <span class="nl">text-align</span><span class="p">:</span> <span class="nb">left</span>
  <span class="p">}</span>

  <span class="nt">thead</span> <span class="p">{</span>
    <span class="nl">display</span><span class="p">:</span> <span class="nb">table-header-group</span>
  <span class="p">}</span>

  <span class="nt">tr</span> <span class="p">{</span>
    <span class="nl">page-break-inside</span><span class="p">:</span> <span class="nb">avoid</span>
  <span class="p">}</span>

  <span class="nt">a</span> <span class="p">{</span>
    <span class="nl">text-decoration</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">black</span> <span class="cp">!important</span>
  <span class="p">}</span>


  <span class="nt">a</span><span class="o">[</span><span class="nt">aria-label</span><span class="o">]</span><span class="nd">::after</span> <span class="p">{</span>
    <span class="nl">display</span><span class="p">:</span> <span class="nb">inline</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">content</span><span class="p">:</span> <span class="s1">" ("</span> <span class="n">attr</span><span class="p">(</span><span class="n">aria-label</span><span class="p">)</span> <span class="s1">")"</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">slategray</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">70%</span> <span class="cp">!important</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="nt">a</span><span class="o">[</span><span class="nt">class</span><span class="o">=</span><span class="s1">"tag"</span><span class="o">]</span> <span class="p">{</span>
    <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">bold</span><span class="p">;</span>
    <span class="nl">font-family</span><span class="p">:</span> <span class="n">var</span><span class="p">(</span><span class="n">--font-monospace</span><span class="p">);</span>
    <span class="nl">background</span><span class="p">:</span> <span class="nb">none</span>
  <span class="p">}</span>

  <span class="nc">.callout</span> <span class="p">{</span>
    <span class="nl">background</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
    <span class="nl">border-width</span><span class="p">:</span> <span class="m">1px</span><span class="p">;</span>
    <span class="nl">border-color</span><span class="p">:</span> <span class="n">rgba</span><span class="p">(</span><span class="n">var</span><span class="p">(</span><span class="n">--callout-color</span><span class="p">),</span> <span class="m">0.75</span><span class="p">)</span>
  <span class="p">}</span>

  <span class="c">/* -=-=-=-=-=-=-
   * Specific to custom checkboxes in @kepano's minimal theme
   */</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"/"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">input</span><span class="o">[</span><span class="nt">type</span><span class="o">=</span><span class="nt">checkbox</span><span class="o">]</span><span class="nd">:checked::after</span> <span class="p">{</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="no">black</span>
  <span class="p">}</span>

  <span class="nt">input</span><span class="o">[</span><span class="nt">type</span><span class="o">=</span><span class="nt">checkbox</span><span class="o">]</span><span class="nd">:checked</span> <span class="p">{</span>
    <span class="nl">background</span><span class="p">:</span> <span class="nb">none</span>
  <span class="p">}</span>

  <span class="nt">ul</span><span class="o">&gt;</span><span class="nt">li</span><span class="nc">.task-list-item</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"x"</span><span class="o">]</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">black</span>
  <span class="p">}</span>

  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"!"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"*"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s2">'"'</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"l"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"b"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"i"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"S"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"I"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"p"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"c"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"f"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"k"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"w"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"u"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"d"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"?"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span> <span class="p">{</span>
    <span class="nl">background</span><span class="p">:</span> <span class="nb">none</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">-webkit-mask-image</span><span class="p">:</span> <span class="nb">none</span> <span class="cp">!important</span>
  <span class="p">}</span>
  <span class="c">/* -=-=-=-=-=-=- */</span>

<span class="p">}</span>
</code></pre></div></div>
<p><a href="https://gist.github.com/ScottKillen/499246e2f44fc1b59d8ff3795311f21f?permalink_comment_id=4503094">CSS 템플릿</a></p>

<p>이것만으로도 많은 경우를 커버할 수 있지만 저것만으론 부족하다 그래서 다른 기능들도 추가로 작성해야한다.</p>

<hr />

<h3 id="백그라운드-컬러">백그라운드 컬러</h3>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nc">.print</span> <span class="nc">.markdown-preview-view</span> <span class="p">{</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="m">#1E1E2E</span><span class="p">;</span>
    <span class="nl">color</span><span class="p">:</span> <span class="n">var</span><span class="p">(</span><span class="n">--text-normal</span><span class="p">);</span>
  <span class="c">/* -=-=-=-=-=-=- */</span>
<span class="p">}</span>
</code></pre></div></div>
<p>배경 색상을 바꾼다.</p>

<hr />

<h3 id="코드블럭-색상">코드블럭 색상</h3>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">/*코드블럭 색상 변경*/</span>
  <span class="nt">code</span><span class="o">,</span> <span class="nt">code</span><span class="o">[</span><span class="nt">class</span><span class="o">*=</span><span class="s1">"language-"</span><span class="o">],</span>
  <span class="nt">pre</span><span class="o">,</span> <span class="nt">pre</span><span class="o">[</span><span class="nt">class</span><span class="o">*=</span><span class="s1">"language-"</span><span class="o">]</span> <span class="p">{</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">10pt</span><span class="p">;</span>
    <span class="nl">font-family</span><span class="p">:</span> <span class="n">var</span><span class="p">(</span><span class="n">--code-font-family</span><span class="p">);</span>
    <span class="nl">color</span><span class="p">:</span> <span class="m">#79C1CF</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">background</span><span class="p">:</span> <span class="nb">none</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="m">#11111B</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">margin</span><span class="p">:</span> <span class="m">0px</span> <span class="cp">!important</span><span class="p">;</span>
  <span class="p">}</span>


<span class="nc">.token.block-comment</span><span class="o">,</span>
<span class="nc">.token.cdata</span><span class="o">,</span>
<span class="nc">.token.comment</span><span class="o">,</span>
<span class="nc">.token.doctype</span><span class="o">,</span>
<span class="nc">.token.prolog</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="m">#B2BADD</span> <span class="cp">!important</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.token.punctuation</span><span class="o">,</span>
<span class="nc">.token.class-name</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="m">#B2BADD</span> <span class="cp">!important</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.token.boolean</span><span class="o">,</span>
<span class="nc">.token.constant</span><span class="o">,</span>
<span class="nc">.token.deleted</span><span class="o">,</span>
<span class="nc">.token.function-name</span><span class="o">,</span>
<span class="nc">.token.number</span><span class="o">,</span>
<span class="nc">.token.property</span><span class="o">,</span>
<span class="nc">.token.symbol</span><span class="o">,</span>
<span class="nc">.token.tag</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="m">#79C1CF</span> <span class="cp">!important</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.token.entity</span><span class="o">,</span>
<span class="nc">.token.operator</span><span class="o">,</span>
<span class="nc">.token.url</span><span class="p">{</span>
  <span class="nl">color</span><span class="p">:</span> <span class="m">#DF809B</span> <span class="cp">!important</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.token.keyword</span> <span class="p">{</span>
  <span class="nl">color</span><span class="p">:</span> <span class="m">#EEBCE1</span> <span class="cp">!important</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.token.attr-name</span><span class="o">,</span>
<span class="nc">.token.builtin</span><span class="o">,</span>
<span class="nc">.token.char</span><span class="o">,</span>
<span class="nc">.token.function</span><span class="o">,</span>
<span class="nc">.token.inserted</span><span class="o">,</span>
<span class="nc">.token.selector</span><span class="o">,</span>
<span class="nc">.token.string</span><span class="o">,</span>
<span class="nc">.token.variable</span>
 <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="m">#EED8A8</span> <span class="cp">!important</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.token.atrule</span><span class="o">,</span>
<span class="nc">.token.attr-value</span><span class="o">,</span>
<span class="nc">.token.class-name</span> <span class="p">{</span>
  <span class="c">/*EED8A8*/</span>
    <span class="nl">color</span><span class="p">:</span> <span class="m">#79C1CF</span> <span class="cp">!important</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.token.important</span><span class="o">,</span>
<span class="nc">.token.regex</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="m">#e90</span>
<span class="p">}</span>
</code></pre></div></div>
<p>코드블럭 내부에 있는 다양한 글자 색상을 변경한다.</p>

<hr />
<h3 id="bold-italic-체-색상">Bold, Italic 체 색상</h3>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">strong</span><span class="p">{</span>
    <span class="nl">color</span> <span class="p">:</span><span class="m">#DF809B</span> <span class="cp">!important</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="c">/*이태릭 색깔 정하기*/</span>
  <span class="nt">em</span><span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span><span class="m">#A5E1A0</span> <span class="cp">!important</span><span class="p">;</span>
  <span class="p">}</span>
</code></pre></div></div>

<hr />
<h3 id="콜아웃-색상">콜아웃 색상</h3>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nc">.callout</span> <span class="p">{</span>
    <span class="nl">background</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
    <span class="nl">border-width</span><span class="p">:</span> <span class="m">0px</span><span class="p">;</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="n">rgba</span><span class="p">(</span><span class="n">var</span><span class="p">(</span><span class="n">--callout-color</span><span class="p">),</span> <span class="m">0.15</span><span class="p">)</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">border-color</span><span class="p">:</span> <span class="n">rgba</span><span class="p">(</span><span class="n">var</span><span class="p">(</span><span class="n">--callout-color</span><span class="p">),</span> <span class="m">0.75</span><span class="p">)</span> <span class="cp">!important</span><span class="p">;</span>
  <span class="p">}</span>
</code></pre></div></div>
<p>콜아웃의 색을 변경한다. 다만 타이틀 부분 색상이 변경이 되지 않는데 이후에 변경 방법을 발견하면 추가하겠다.</p>

<div class="Reference">
<div class="callout-header"> </div>
<p>
<a href="https://gist.github.com/ScottKillen/499246e2f44fc1b59d8ff3795311f21f?permalink_comment_id=4503094">https://gist.github.com/ScottKillen/499246e2f44fc1b59d8ff3795311f21f?permalink_comment_id=4503094</a>
<a href="https://forum.obsidian.md/t/how-to-style-the-pdf-with-media-print/9673">https://forum.obsidian.md/t/how-to-style-the-pdf-with-media-print/9673</a>
<a href="https://kaminik.tistory.com/entry/CSS-Snippet-%EC%BD%94%EB%93%9C%EB%B8%94%EB%A1%9D-%EC%8A%A4%ED%83%80%EC%9D%BCLight-mode">https://kaminik.tistory.com/entry/CSS-Snippet-%EC%BD%94%EB%93%9C%EB%B8%94%EB%A1%9D-%EC%8A%A4%ED%83%80%EC%9D%BCLight-mode</a>
<a href="https://github.com/AnubisNekhet/AnuPpuccin/issues/48">https://github.com/AnubisNekhet/AnuPpuccin/issues/48</a>
<a href="https://forum.squarespace.com/topic/180631-how-do-you-change-color-of-italic-text-using-css/">https://forum.squarespace.com/topic/180631-how-do-you-change-color-of-italic-text-using-css/</a>
</p>
</div>]]></content><author><name>Mohitto55</name></author><category term="obsidian" /><category term="css" /><category term="html" /><category term="Obsidian" /><category term="PDF" /><category term="옵시디언" /><summary type="html"><![CDATA[PDF 출력]]></summary></entry><entry><title type="html">[Visual Studio] Nuget Package Manager Console 사용 방법</title><link href="http://localhost:4000/vs/VS-%ED%8C%A8%ED%82%A4%EC%A7%80-%EB%A7%A4%EB%8B%88%EC%A0%80-%EC%BD%98%EC%86%94-%EC%82%AC%EC%9A%A9%EB%B2%95/" rel="alternate" type="text/html" title="[Visual Studio] Nuget Package Manager Console 사용 방법" /><published>2024-04-05T00:00:00+09:00</published><updated>2024-04-05T00:00:00+09:00</updated><id>http://localhost:4000/vs/VS%20%ED%8C%A8%ED%82%A4%EC%A7%80%20%EB%A7%A4%EB%8B%88%EC%A0%80%20%EC%BD%98%EC%86%94%20%EC%82%AC%EC%9A%A9%EB%B2%95</id><content type="html" xml:base="http://localhost:4000/vs/VS-%ED%8C%A8%ED%82%A4%EC%A7%80-%EB%A7%A4%EB%8B%88%EC%A0%80-%EC%BD%98%EC%86%94-%EC%82%AC%EC%9A%A9%EB%B2%95/"><![CDATA[<h2 id="들어가며">들어가며</h2>
<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/66918995-af63-45b2-8696-5bbf16e1e523" alt="image" /></p>

<p>C#을 통해 작업하다보면 외부 라이브러리를 사용해야 할 경우가 있다.
마침 적당한 라이브러리가 보여서 Nuget 패키지를 통해서 찾다보면 검색이 안되는 경우가 있다. 그래서 공식 사이트에가서 설치 방법을 알아보면 저런 설치 명령어가 있는 경우가 있다.</p>

<p>필자도 Itext를 다운 받으려고 했는데 Nuget에서 Itext가 다운이 되지 않아 방법을 찾아보니 저런걸 발견했다. 결론은 C#은 ItextSharp 라는 버전을 따로 설치해야 했던 거지만 말이다.</p>

<p>아무튼 CLI에 치면 될 것 처럼 생겼는데 일반 CMD에서 치면 적용이 안된다. 해당 명령어는 Nuget Package Manager Console이라고 Visual Studio 내부 명령어 창에서 사용해야 한다.</p>

<h2 id="nuget-package-manager-console">Nuget Package Manager Console</h2>
<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/b8fdf5fe-907f-43d7-8547-b980951828d3" alt="image" /></p>

<p>콘솔창을 여는 방법은 도구 &gt; Nuget 패키지 관리자 &gt; 패키지 관리자 콘솔 을 누르면 하단 솔루션 창에 입력이 가능하다.
ItextSharp 버전을 다운 받기위해 아래 명령어를 입력했다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Install-Package ItextSharp
</code></pre></div></div>

<hr />

<h3 id="결과">결과</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>PM&gt; Install-Package itextsharp
C:\Users\admin\source\repos\ITEXT\ITEXT\ITEXT.csproj의 패키지를 복원하는 중...
  CACHE https://api.nuget.org/v3/vulnerabilities/index.json
  CACHE https://api.nuget.org/v3-vulnerabilities/2024.04.03.05.44.44/vulnerability.base.json
  CACHE https://api.nuget.org/v3-vulnerabilities/2024.04.03.05.44.44/2024.04.04.17.44.54/vulnerability.update.json
NuGet 패키지 itextsharp 5.5.13.3을(를) 설치하고 있습니다.
자산 파일을 디스크에 쓰는 중입니다. 경로: C:\Users\admin\source\repos\ITEXT\ITEXT\obj\project.assets.json
C:\Users\admin\source\repos\ITEXT\ITEXT\ITEXT.csproj을(를) 28밀리초 동안 복원했습니다.
ITEXT에 'BouncyCastle 1.8.9'을(를) 설치했습니다.
ITEXT에 'iTextSharp 5.5.13.3'을(를) 설치했습니다.
Nuget 작업 실행 시간: 83밀리초
경과 시간: 00:00:00.1162594
</code></pre></div></div>
<p>결과적으론 잘 다운되어 적용된다.</p>

<div class="Reference">
<div class="callout-header"> </div>
<p>
<a href="https://narup.tistory.com/123">https://narup.tistory.com/123</a>
</p>
</div>]]></content><author><name>Mohitto55</name></author><category term="vs" /><category term="Visual Studio" /><category term="Nuget" /><category term="Nuget Package Manager Console" /><category term="WSL2" /><category term="C#" /><summary type="html"><![CDATA[들어가며]]></summary></entry><entry><title type="html">[Ubuntu] Docker 삭제하기</title><link href="http://localhost:4000/linux/Docker-%EC%99%84%EC%A0%84-%EC%82%AD%EC%A0%9C%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="[Ubuntu] Docker 삭제하기" /><published>2024-03-28T00:00:00+09:00</published><updated>2024-03-28T00:00:00+09:00</updated><id>http://localhost:4000/linux/Docker%20%EC%99%84%EC%A0%84%20%EC%82%AD%EC%A0%9C%ED%95%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/linux/Docker-%EC%99%84%EC%A0%84-%EC%82%AD%EC%A0%9C%ED%95%98%EA%B8%B0/"><![CDATA[<h1 id="docker-삭제하기">Docker 삭제하기</h1>
<h2 id="1-docker-설치-확인하기">1. docker 설치 확인하기</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dpkg -l | grep -i docker
</code></pre></div></div>

<h2 id="2-docker를-삭제">2. docker를 삭제</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get purge -y docker-engine docker docker.io docker-ce
sudo apt-get autoremove -y --purge docker-engine docker docker.io docker-ce
</code></pre></div></div>
<p>위의 명령으로 호스트에서 이미지, 컨테이너, 볼륨 또는 사용자 생성 구성 파일을 제외한 모든 파일을 삭제한다.</p>

<h2 id="3-모든-이미지-컨테이너-및-볼륨을-삭제">​3. 모든 이미지, 컨테이너 및 볼륨을 삭제</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo rm -rf /var/lib/docker /etc/docker
sudo rm /etc/apparmor.d/docker
sudo groupdel docker
sudo rm -rf /var/run/docker.sock
</code></pre></div></div>
<p>시스템에서 Docker를 완전히 제거,</p>

<hr />

<h3 id="우분투에서-삭제하기">우분투에서 삭제하기</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo snap remove docker
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo find / -name "*docker*" -exec `rm -rf` {} +
</code></pre></div></div>
<p>모든 docker 관련 파일을 삭제</p>

<hr />

<div class="Reference">
<div class="callout-header"> </div>
<p>
<a href="https://may9noy.tistory.com/392">https://may9noy.tistory.com/392</a>
</p>
</div>]]></content><author><name>Mohitto55</name></author><category term="linux" /><category term="Window" /><category term="Linux" /><category term="Ubuntu" /><category term="WSL2" /><category term="Window Service for Linux" /><category term="Docker" /><category term="도커" /><category term="우분투" /><category term="윈도우" /><category term="리눅스" /><summary type="html"><![CDATA[Docker 삭제하기 1. docker 설치 확인하기 dpkg -l | grep -i docker]]></summary></entry><entry><title type="html">[Ubuntu] Docker 설치하기</title><link href="http://localhost:4000/linux/Docker-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="[Ubuntu] Docker 설치하기" /><published>2024-03-28T00:00:00+09:00</published><updated>2024-03-28T00:00:00+09:00</updated><id>http://localhost:4000/linux/Docker%20%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/linux/Docker-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/"><![CDATA[<h2 id="도커-다운받기">도커 다운받기</h2>
<h3 id="1-우분투-시스템-패키지-업데이트">1. 우분투 시스템 패키지 업데이트</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get update
</code></pre></div></div>

<h3 id="2-필요한-패키지-설치">2. 필요한 패키지 설치</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
</code></pre></div></div>

<h3 id="3-docker의-공식-gpg키를-추가">3. Docker의 공식 GPG키를 추가</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
</code></pre></div></div>

<h3 id="4-docker의-공식-apt-저장소를-추가">4. Docker의 공식 apt 저장소를 추가</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
</code></pre></div></div>

<h3 id="5-시스템-패키지-업데이트">5. 시스템 패키지 업데이트</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get update
</code></pre></div></div>

<h3 id="6-docker-설치">6. Docker 설치</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get install docker-ce docker-ce-cli containerd.io
</code></pre></div></div>

<h3 id="7-docker가-설치-확인">7. Docker가 설치 확인</h3>
<p>7-1 도커 버전 확인</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker -v
</code></pre></div></div>

<p>7-2 도커 실행상태 확인</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo systemctl status docker
</code></pre></div></div>

<hr />

<div class="Reference">
<div class="callout-header"> </div>
<p>
<a href="https://may9noy.tistory.com/392">https://may9noy.tistory.com/392</a>
</p>
</div>]]></content><author><name>Mohitto55</name></author><category term="linux" /><category term="Window" /><category term="Linux" /><category term="Ubuntu" /><category term="WSL2" /><category term="Window Service for Linux" /><category term="Docker" /><category term="도커" /><category term="우분투" /><category term="윈도우" /><category term="리눅스" /><summary type="html"><![CDATA[도커 다운받기 1. 우분투 시스템 패키지 업데이트 sudo apt-get update]]></summary></entry><entry><title type="html">[Math] 데카르트 좌표계와 극 좌표계</title><link href="http://localhost:4000/math/%EC%A2%8C%ED%91%9C%EA%B3%84-%EC%A0%95%EB%A6%AC/" rel="alternate" type="text/html" title="[Math] 데카르트 좌표계와 극 좌표계" /><published>2024-03-25T00:00:00+09:00</published><updated>2024-03-25T00:00:00+09:00</updated><id>http://localhost:4000/math/%EC%A2%8C%ED%91%9C%EA%B3%84%20%EC%A0%95%EB%A6%AC</id><content type="html" xml:base="http://localhost:4000/math/%EC%A2%8C%ED%91%9C%EA%B3%84-%EC%A0%95%EB%A6%AC/"><![CDATA[<h2 id="들어가기">들어가기</h2>
<p>좌표는 우리 일상 생활에서 중요한 요소다. 사람과의 거리, 건축, 컴퓨터 등 다양한 분야에서 사용하는 개념이다. 좌표계는 고대에도 사용된 개념인데 천문학자들이 별의 위치를 추정하기 위하여 사용하곤 했다.</p>

<p>오늘은 우리 일상과 빠트릴 수 없는 좌표계에 대하여 알아볼 것이다.</p>
<h2 id="좌표계란">좌표계란</h2>
<ul>
  <li>공간에 대해서 위치를 숫자나 가하학 요소를 이용해 나타낸 것이다</li>
</ul>

<h2 id="데카르트-좌표계cartesian-coordinate-system">데카르트 좌표계(Cartesian coordinate system)</h2>
<ul>
  <li>좌표평명의 2D좌표계다</li>
  <li>
    <p>2차원 평면에서 X,Y축 한쌍으로 표현</p>
  </li>
  <li>사분면
    <ul>
      <li>1사분면 : X값이 +, Y값이 +인 사분면</li>
      <li>2사분면 : X값이 -, Y값이 +인 사분면</li>
      <li>3사분면 : X값이 -, Y값이 -인 사분면</li>
      <li>4사분면 : X값이 +, Y값이 -인 사분면</li>
    </ul>
  </li>
</ul>

<hr />

<h3 id="게임서의-2차원-좌표계">게임서의 2차원 좌표계</h3>

<ul>
  <li>2D 게임의 일반 좌표계</li>
</ul>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/a1349719-a21d-41c8-9938-8f8e6a577bcd" alt="image" /><em>그래픽 라이브러리 별 UV 좌표</em></p>

<ul>
  <li>UV 좌표계
    <ul>
      <li>맵핑 - 메쉬에 텍스쳐를 입힐 때 사용한다.</li>
      <li>기획자랑 얘기하여 좌표계를 정해야 한다.</li>
      <li>일반 좌표계로 바꿔 만들면 음수가 생길 수 있다.</li>
      <li>기획자와 뒤집힌 좌표계로 할지 일반 좌표계로 할지 정해야 한다.</li>
      <li>변경하면 수를 변형할 함수 제작 필요</li>
    </ul>
  </li>
  <li>데카르트 좌표계
    <ul>
      <li>좌표공간 3차원 좌표계</li>
      <li>x,y,z축을 한 쌍으로 표현 (x,y,z)</li>
    </ul>
  </li>
</ul>

<hr />

<h3 id="왼손좌표계-오른손-좌표계">왼손좌표계 오른손 좌표계</h3>
<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/49fc4103-b66f-43fe-ae14-a7d04b9e295d" alt="image" /></p>

<ul>
  <li>엄지, 검지, <strong>중지</strong>는 각각 X Y Z 를 바라보게 한다.</li>
  <li>중지의 방향만 바꿔준다</li>
</ul>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/c5479b25-00cf-4ef2-b809-29a1d65c1d89" alt="image" /><em>엔진별 좌표계</em></p>

<ul>
  <li>게임 엔진에 따라서 다르다</li>
  <li>왼손 좌표계 - Unity, DirectX UnreaEngine</li>
  <li>오른손 좌표계 - OpenGL, 3DSMax</li>
  <li>좌표계가 서로 다른 이유는 OpenGL이 먼저 나왔는데 다렉, 유니티는 게임 개발 친화적으로 좌표를 바꿔서 그렇다</li>
</ul>

<hr />

<h3 id="좌표계-회전하기">좌표계 회전하기</h3>
<p>좌표계 회전하기
바꿀려는 좌표계의 손 좌표계를 설정한다.
손 좌표계를 기준으로 손이 감기는 방향 생각하기
<strong>엄지</strong>를 기준으로 회전축 잡기</p>

<h2 id="극좌표계">극좌표계</h2>
<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/ccd0da52-3c34-40ed-a354-a7cb62685321" alt="image" /></p>

<ul>
  <li>2D 평면상의 점의 위치를 원점과 거리와 X축 각도만 이용해 점의 위치 표현
    <ul>
      <li>원점과의 거리 = r</li>
      <li>X각도 = \(\theta\)</li>
      <li>(r, \(\theta\))</li>
    </ul>
  </li>
</ul>

<h3 id="극좌표계-요소-구하기">극좌표계 요소 구하기</h3>

\[r = \sqrt{x^{2} + y^{2}}\]

\[\theta = atan2(y,x)\]

<h3 id="데카르드-좌표계-요소-구하기">데카르드 좌표계 요소 구하기</h3>

\[x = r * cos\theta\]

\[y = r* sin\theta\]]]></content><author><name>Mohitto55</name></author><category term="math" /><category term="데카르트 좌표계" /><category term="Cartesian coordinate system" /><category term="극 좌표계" /><category term="Polar coordinate system" /><summary type="html"><![CDATA[들어가기 좌표는 우리 일상 생활에서 중요한 요소다. 사람과의 거리, 건축, 컴퓨터 등 다양한 분야에서 사용하는 개념이다. 좌표계는 고대에도 사용된 개념인데 천문학자들이 별의 위치를 추정하기 위하여 사용하곤 했다.]]></summary></entry><entry><title type="html">[C++] 백준 17396번-백도어</title><link href="http://localhost:4000/boj/BOJ-17396%EB%B2%88/" rel="alternate" type="text/html" title="[C++] 백준 17396번-백도어" /><published>2024-03-24T00:00:00+09:00</published><updated>2024-03-24T00:00:00+09:00</updated><id>http://localhost:4000/boj/BOJ%2017396%EB%B2%88</id><content type="html" xml:base="http://localhost:4000/boj/BOJ-17396%EB%B2%88/"><![CDATA[<div class="callout-info-expanded">
<div class="callout-header">문제 링크</div>
<p>
<a href="https://www.acmicpc.net/problem/17396">BOJ 17396-백도어</a>
</p>
</div>

<h2 id="문제">문제</h2>
<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/13b609a3-b587-4aed-b877-3d505e0b44c1" alt="image" /></p>

<div class="code-block1">
예제 입력1
<div class="language-cpp highlighter-rouge">
<div class="highlight">
<pre class="highlight"><code>5 7
0 0 0 1 1
0 1 7
0 2 2
1 2 4
1 3 3
1 4 6
2 3 2
3 4 1</code></pre></div></div></div>

<div class="code-block2">
에제 출력1
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight">
<code>12</code></pre></div></div></div>

<div class="code-block1">
예제 입력2
<div class="language-cpp highlighter-rouge">
<div class="highlight">
<pre class="highlight"><code>5 7
0 1 0 1 1
0 1 7
0 2 2
1 2 4
1 3 3
1 4 6
2 3 2
3 4 1</code></pre></div></div></div>

<div class="code-block2">
에제 출력2
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight">
<code>-1</code></pre></div></div></div>

<h2 id="풀이">풀이</h2>
<p><strong>다익스트라 알고리즘</strong>을 이용하면 쉽게 풀 수 있는 문제다.</p>

<p>다만 자료형 종류의 크기를 주의해야 하는데 다른 노드로 이동하는데 드는 최대 가중치가 100000이고 모든 노드를 한번씩 돈다 가정하면 100000번을 도는 것이니 <strong>100000 * 100000</strong> 이 최대 거리가 된다. 그렇기에 <strong>int</strong> 자료형으로 거리를 기록하면 문제를 틀리게 될것이다.</p>

<h2 id="소스코드">소스코드</h2>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">"bits/stdc++.h"</span><span class="cp">
#define ll long long
#define MAX 1000000000000
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="n">region</span><span class="p">[</span><span class="mi">100005</span><span class="p">];</span>
<span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">pair</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span><span class="kt">int</span><span class="o">&gt;&gt;&gt;</span> <span class="n">adj</span><span class="p">(</span><span class="mi">100005</span><span class="p">);</span>
<span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">Dijkstra</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">)</span> <span class="p">{</span>
	<span class="n">vector</span><span class="o">&lt;</span><span class="n">ll</span><span class="o">&gt;</span> <span class="n">dst</span><span class="p">(</span><span class="mi">100005</span><span class="p">,</span> <span class="n">MAX</span><span class="p">);</span>
	<span class="n">priority_queue</span><span class="o">&lt;</span><span class="n">pair</span><span class="o">&lt;</span><span class="n">ll</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">q</span><span class="p">;</span>
	<span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">make_pair</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">a</span><span class="p">));</span>
	<span class="k">while</span> <span class="p">(</span><span class="o">!</span><span class="n">q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span>
		<span class="n">ll</span> <span class="n">value</span> <span class="o">=</span> <span class="o">-</span><span class="n">q</span><span class="p">.</span><span class="n">top</span><span class="p">().</span><span class="n">first</span><span class="p">;</span>
		<span class="kt">int</span> <span class="n">now</span> <span class="o">=</span> <span class="n">q</span><span class="p">.</span><span class="n">top</span><span class="p">().</span><span class="n">second</span><span class="p">;</span>
		<span class="n">q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
		<span class="k">if</span> <span class="p">(</span><span class="n">region</span><span class="p">[</span><span class="n">now</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">now</span> <span class="o">==</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
				<span class="n">dst</span><span class="p">[</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">min</span><span class="p">(</span><span class="n">dst</span><span class="p">[</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">],</span> <span class="n">value</span><span class="p">);</span>
			<span class="p">}</span>
			<span class="k">else</span> <span class="p">{</span>
				<span class="k">continue</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>

		<span class="k">if</span> <span class="p">(</span><span class="n">dst</span><span class="p">[</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="n">value</span><span class="p">)</span>
			<span class="k">continue</span><span class="p">;</span>
		<span class="k">if</span> <span class="p">(</span><span class="n">dst</span><span class="p">[</span><span class="n">now</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="n">value</span><span class="p">)</span> <span class="p">{</span>
			<span class="k">continue</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="n">dst</span><span class="p">[</span><span class="n">now</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span><span class="p">;</span>
		

		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">adj</span><span class="p">[</span><span class="n">now</span><span class="p">].</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
			<span class="kt">int</span> <span class="n">next</span> <span class="o">=</span> <span class="n">adj</span><span class="p">[</span><span class="n">now</span><span class="p">][</span><span class="n">i</span><span class="p">].</span><span class="n">first</span><span class="p">;</span>
			<span class="n">ll</span> <span class="n">nValue</span> <span class="o">=</span> <span class="n">adj</span><span class="p">[</span><span class="n">now</span><span class="p">][</span><span class="n">i</span><span class="p">].</span><span class="n">second</span> <span class="o">+</span> <span class="n">value</span><span class="p">;</span>

			<span class="k">if</span> <span class="p">(</span><span class="n">nValue</span> <span class="o">&lt;</span> <span class="n">dst</span><span class="p">[</span><span class="n">next</span><span class="p">])</span> <span class="p">{</span>
				<span class="n">q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">make_pair</span><span class="p">(</span><span class="o">-</span><span class="n">nValue</span><span class="p">,</span> <span class="n">next</span><span class="p">));</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="p">(</span><span class="n">dst</span><span class="p">[</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">MAX</span><span class="p">)</span> <span class="p">{</span>
		<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">else</span> <span class="p">{</span>
		<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">dst</span><span class="p">[</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">];</span>
	<span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="n">ios_base</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
	<span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>

	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">n</span> <span class="o">&gt;&gt;</span> <span class="n">m</span><span class="p">;</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
		<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">region</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
	<span class="p">}</span>
	<span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">t</span><span class="p">;</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">m</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
		<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">a</span> <span class="o">&gt;&gt;</span> <span class="n">b</span> <span class="o">&gt;&gt;</span> <span class="n">t</span><span class="p">;</span>

		<span class="n">adj</span><span class="p">[</span><span class="n">a</span><span class="p">].</span><span class="n">push_back</span><span class="p">(</span><span class="n">make_pair</span><span class="p">(</span><span class="n">b</span><span class="p">,</span><span class="n">t</span><span class="p">));</span>
		<span class="n">adj</span><span class="p">[</span><span class="n">b</span><span class="p">].</span><span class="n">push_back</span><span class="p">(</span><span class="n">make_pair</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">t</span><span class="p">));</span>
	<span class="p">}</span>
	<span class="n">Dijkstra</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>Mohitto55</name></author><category term="boj" /><category term="boj" /><category term="백준" /><category term="PS" /><category term="solved" /><category term="문제풀이 17396번" /><category term="Dijkstra" /><category term="다익스트라" /><summary type="html"><![CDATA[문제 링크 BOJ 17396-백도어]]></summary></entry><entry><title type="html">[Docker] Ubuntu에서 Docker 설치하기</title><link href="http://localhost:4000/network/Docker%EC%97%90-MySql-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="[Docker] Ubuntu에서 Docker 설치하기" /><published>2024-03-22T00:00:00+09:00</published><updated>2024-03-22T00:00:00+09:00</updated><id>http://localhost:4000/network/Docker%EC%97%90%20MySql%20%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/network/Docker%EC%97%90-MySql-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/"><![CDATA[<h2 id="docker">Docker</h2>
<p>Docker란 컨테이너를 이용한 오픈소스 가상화 플랫폼이다. 
컨테이너는 OS레벨의 가상화로 프로세스를 격리시켜 동작하는 것을 말한다. OS자체를 가상화 하던 방식과는 다른데 무슨 차이가 있는 것일 까</p>

<h2 id="vm-가상화-vs-docker-가상화">VM 가상화 vs Docker 가상화</h2>

<h2 id="사용하는-이유">사용하는 이유</h2>
<p>개발하고 서버에 올리면 끝
그런데 서버에 올리면 작동 안함
whyt 컴터는 윈도우, 서버는 리눅스여서
도커를 사용하면 다른 머신에서도 같은 환경 구성 가능</p>

<p>윈도우, 서버에 둘다 Docker 설치
구성하고 싶은 환경 설정하면 됨</p>

<p>도커는 파일읽고 필요한걸 다운 받고
같은 환경을 컨테이너에 구성함</p>

<p>그래서 컴에서 서버로 코드 업로드하면(Docker와 같이) 잘 작동 함</p>

<p>또 각 컨테이너는 각기 분리되어 있음
컨테이너들은 독립적임
이덕에 한개의 서버에서 수많은 컨테이너 가질 수 있음</p>

<p>만약 자바 애플리케이션이 인기 많으면 자바 컨테이너 늘리고 인기 줄면 줄이고 가능
매번 서버를 사고 팔 이유가 없음</p>

<ol>
  <li>원하는 개발 환경을 파일에 저장하면 어떤 머신에든 해당 환경 구성해줌</li>
  <li>각 환경을 독립적이기 때문에 무슨 환경이든 모듈식 관리 가능</li>
</ol>

<h2 id="docker-이미지">Docker 이미지</h2>
<p>컨테이너를 만드는데 사용되는 Template</p>

<h2 id="mysql">MySQL</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker -v
</code></pre></div></div>
<blockquote>
  <p>Docker 버전 확인</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker pull mysql
</code></pre></div></div>
<blockquote>
  <p>Docker 이미지 다운</p>
</blockquote>

<p><img src="https://github.com/mohitto55/Blog_Images/assets/154340583/5c72a46d-5327-48a0-bfbe-c5e80a298495" alt="image" /></p>

<div class="Reference">
<div class="callout-header"> </div>
<p>
<a href="https://hipopatamus.tistory.com/109">https://hipopatamus.tistory.com/109</a>
<a href="https://khj93.tistory.com/entry/Docker-Docker-%EA%B0%9C%EB%85%90">https://khj93.tistory.com/entry/Docker-Docker-%EA%B0%9C%EB%85%90</a>
<a href="https://www.youtube.com/watch?v=chnCcGCTyBg">https://www.youtube.com/watch?v=chnCcGCTyBg</a>
</p>
</div>]]></content><author><name>Mohitto55</name></author><category term="network" /><category term="Docket" /><category term="Ubuntu" /><category term="Linux" /><category term="컨테이너" /><summary type="html"><![CDATA[Docker Docker란 컨테이너를 이용한 오픈소스 가상화 플랫폼이다. 컨테이너는 OS레벨의 가상화로 프로세스를 격리시켜 동작하는 것을 말한다. OS자체를 가상화 하던 방식과는 다른데 무슨 차이가 있는 것일 까]]></summary></entry><entry><title type="html">[Window] Window에서 Linux(WSL2) 환경 설치하기</title><link href="http://localhost:4000/os/WSL2-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="[Window] Window에서 Linux(WSL2) 환경 설치하기" /><published>2024-03-22T00:00:00+09:00</published><updated>2024-03-22T00:00:00+09:00</updated><id>http://localhost:4000/os/WSL2%20%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/os/WSL2-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/"><![CDATA[<h2 id="들어가며">들어가며</h2>
<p>Docker를 사용하기 위해 알아보던 중 Hyper-V 기능을 활성화 해야하는 것을 알았다. 활성화 하려고 했지만 아무리 찾아도 보이지 않았다. 어찌된 것인지 알아보니 Window Pro 이상의 버전만 지원하는 기능이였고 난 Home였기에 할 수 없었다.</p>

<p>어떻게든 방법을 찾던 와중 Window에서 Linux 환경을 실행할 수 있는 기능이 있었고 이를 이용하면 Docker도 설치할 수 있다는 것을 알았다.</p>

<h2 id="wsl2">WSL2</h2>
<p>WSL2(Window Service for Linux)는 Window에서 <strong>Linux Vritual Machine</strong> 환경을 구성할 수 있게 해주는 기능이다. MS에서 지원하는 기능으로 과거에 비해 제약이 많이 줄어 Window 환경만 최신으로 해놨다면 큰 무리 없이 설치할 수 있을 것이다.</p>

<hr />

<h3 id="설치하기">설치하기</h3>
<p>우선 제어판 &gt; 프로그램 &gt; Windows 기능 켜기/끄기 에서 Linux용 Windows 하위 시스템을 활성화한다.</p>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/c7cfecd1-3618-42a2-b85e-a611e472df2a" alt="스크린샷 2024-03-22 223031" /></p>

<p>그 후 PowerShell을 관리자 권한으로 실행시킨다.</p>

<p>아래 명령어를 입력해 WSL을 설치한다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wsl --install
</code></pre></div></div>

<hr />

<p>그러고 난 후 재부팅을 하고 나면 자동으로 Ubuntu가 설치되고 있을 것이다.</p>

<p>그렇지 않다면 PowerShell에서 아래 명령어를 입력한다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wsl --install -d Ubuntu
</code></pre></div></div>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/6be99b3f-7460-4fb1-ac05-c316519b24e6" alt="스크린샷 2024-03-22 223448" /></p>

<h2 id="마무리">마무리</h2>
<p>이것으로 Window에서 Linux 환경을 구성했다. 이것으로 Docker를 이용한 다양한 프로젝트를 진행해볼 것이다.</p>

<hr />

<div class="Reference">
<div class="callout-header"> </div>
<p>
<a href="https://docs.docker.com/desktop/wsl/">https://docs.docker.com/desktop/wsl/</a>
<a href="https://velog.io/@darktrace1/%EC%9C%88%EB%8F%84%EC%9A%B011%EC%97%90-UbuntuWSL2-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0">https://velog.io/@darktrace1/%EC%9C%88%EB%8F%84%EC%9A%B011%EC%97%90-UbuntuWSL2-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0</a>
</p>
</div>]]></content><author><name>Mohitto55</name></author><category term="os" /><category term="Window" /><category term="Linux" /><category term="Ubuntu" /><category term="WSL2" /><category term="Window Service for Linux" /><category term="우분투" /><category term="윈도우" /><category term="리눅스" /><summary type="html"><![CDATA[들어가며 Docker를 사용하기 위해 알아보던 중 Hyper-V 기능을 활성화 해야하는 것을 알았다. 활성화 하려고 했지만 아무리 찾아도 보이지 않았다. 어찌된 것인지 알아보니 Window Pro 이상의 버전만 지원하는 기능이였고 난 Home였기에 할 수 없었다.]]></summary></entry><entry><title type="html">[Algorithm] Selection Sort 선택정렬 알고리즘</title><link href="http://localhost:4000/algorithm/Selection-Sort-%EC%84%A0%ED%83%9D-%EC%A0%95%EB%A0%AC/" rel="alternate" type="text/html" title="[Algorithm] Selection Sort 선택정렬 알고리즘" /><published>2024-03-19T00:00:00+09:00</published><updated>2024-03-19T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/Selection%20Sort%20%EC%84%A0%ED%83%9D%20%EC%A0%95%EB%A0%AC</id><content type="html" xml:base="http://localhost:4000/algorithm/Selection-Sort-%EC%84%A0%ED%83%9D-%EC%A0%95%EB%A0%AC/"><![CDATA[<h2 id="selection-sort">Selection Sort</h2>
<p>선택정렬 알고리즘은 제자리 정렬 알고리즘 중 하나로 입력 데이터 외 추가 데이터가 필요하지 않은 알고리즘이다.</p>

<h2 id="원리">원리</h2>
<ul>
  <li>정렬하고자 하는 데이터 중 가장 큰 데이터의 맨 끝 데이터랑 교환
    <ol>
      <li>0번 째 Index부터 N-i까지 차례로 순회한다.</li>
      <li>순회를 하던 중 값이 Index &lt; Index +1 일 경우 가장 큰 값을 Index + 1이라 한다.</li>
      <li>순회를 마쳤으면 마지막 값이랑 <font color="dodgerred">가장 큰 값</font>이랑 교환한다.</li>
      <li>i를 1 올리고 다시 0부터 순회한다.</li>
    </ol>
  </li>
</ul>

<h2 id="시간-복잡도">시간 복잡도</h2>

\[(n-1) + (n-2)... = \frac{n(n-1)}{2} = O(N^2)\]

<ul>
  <li>비교 횟수
    <ul>
      <li>i가 n-2 일 때 비교횟수 : <font color="dodgerred">n-2</font></li>
      <li>i가 n-1 일 때 비교횟수 : <font color="dodgerred">n-1</font></li>
      <li>i가 1 일 때 비교횟수 : <font color="dodgerred">1</font></li>
    </ul>
  </li>
  <li>교환 횟수
    <ul>
      <li>외부 루프의 실행 횟수와 동일</li>
      <li>Swap시 3번의 데이터 이동 발생</li>
    </ul>
  </li>
</ul>

<h2 id="코드">코드</h2>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="kt">void</span> <span class="nf">SelectionSort</span><span class="p">(){</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">last</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">last</span> <span class="o">&lt;</span> <span class="n">size</span><span class="p">;</span> <span class="n">last</span><span class="o">++</span><span class="p">){</span>
		<span class="kt">int</span> <span class="n">largestIndex</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
		<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">cur</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">cur</span> <span class="o">&lt;</span> <span class="n">size</span> <span class="o">-</span> <span class="n">last</span><span class="p">;</span> <span class="n">cur</span><span class="o">++</span><span class="p">){</span>
			<span class="k">if</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="n">largestIndex</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">data</span><span class="p">[</span><span class="n">cur</span><span class="p">]){</span>
				<span class="n">largestIndex</span> <span class="o">=</span> <span class="n">cur</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>
		<span class="n">swap</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="n">largestIndex</span><span class="p">],</span> <span class="n">data</span><span class="p">[</span><span class="n">cur</span><span class="p">]);</span>
	<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<div class="Reference">
<div class="callout-header"> </div>
<p>
<a href="https://gmlwjd9405.github.io/2018/05/06/algorithm-selection-sort.html">https://gmlwjd9405.github.io/2018/05/06/algorithm-selection-sort.html</a>
<a href="https://ko.wikipedia.org/wiki/%EC%84%A0%ED%83%9D_%EC%A0%95%EB%A0%AC">https://ko.wikipedia.org/wiki/%EC%84%A0%ED%83%9D_%EC%A0%95%EB%A0%AC</a>
</p>
</div>]]></content><author><name>Mohitto55</name></author><category term="algorithm" /><category term="Algorighm" /><category term="Sort" /><category term="정렬" /><category term="Selection Sort" /><category term="선택정렬" /><summary type="html"><![CDATA[Selection Sort 선택정렬 알고리즘은 제자리 정렬 알고리즘 중 하나로 입력 데이터 외 추가 데이터가 필요하지 않은 알고리즘이다.]]></summary></entry></feed>