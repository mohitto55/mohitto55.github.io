<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-05-20T16:57:28+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Mohitto55 Note</title><subtitle>모히또의 노트</subtitle><author><name>Mohitto55</name></author><entry><title type="html">[UE5] C++ 폴더 추가하는 법</title><link href="http://localhost:4000/ue5/UE5-C++-%ED%8F%B4%EB%8D%94-%EC%83%9D%EC%84%B1%EB%B2%95/" rel="alternate" type="text/html" title="[UE5] C++ 폴더 추가하는 법" /><published>2024-05-20T00:00:00+09:00</published><updated>2024-05-20T00:00:00+09:00</updated><id>http://localhost:4000/ue5/UE5%20C++%20%ED%8F%B4%EB%8D%94%20%EC%83%9D%EC%84%B1%EB%B2%95</id><content type="html" xml:base="http://localhost:4000/ue5/UE5-C++-%ED%8F%B4%EB%8D%94-%EC%83%9D%EC%84%B1%EB%B2%95/"><![CDATA[<h1 id="개요">개요</h1>
<p>언리얼엔진은 C++ Class 폴더가 존재한다. 이 폴더에서 프로젝트에 적용하는 모든 C++ 파일들이 들어가게 되는데 해당 폴더안에 폴더를 새로 생성하면 인식이 되지 않는 경우가 있다.</p>

<p>이를 해결하기 위해선 언리얼이 감지할 수 있게 범위를 지정해 주어야한다.</p>

<h2 id="폴더-감지-설정">폴더 감지 설정</h2>

<p>C++ 파일은 모두 All/C++Classes 폴더 아래에 생성된다.
언리얼엔진은 이 폴더안에 있는 C++ 파일은 감지하지만 안에 있는 폴더는 감지하지 못한다. 그래서 하위폴더도 감지할 수 있게 작업해 줘야한다.</p>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/26460e8d-af22-41d4-83a3-b6da36e10d42" alt="image" /></p>
<blockquote>
  <p>프로젝트이름.Build.cs 파일로 이동해서 아래 코드 사진과 같이 삽입하기
이는 이름에서 알 수 있듯이 언리얼 엔진의 Include 경로를 추가하는 코드다.</p>
</blockquote>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">PublicIncludePaths</span><span class="p">.</span><span class="n">AddRange</span><span class="p">(</span><span class="k">new</span> <span class="n">string</span><span class="p">[]</span> <span class="p">{</span> <span class="s">"StudyExample"</span> <span class="p">});</span>
</code></pre></div></div>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/0e087686-7bf8-4c2b-84aa-bd4071416da0" alt="image" /><em>코드 삽입시 모습</em></p>

<div class="callout-info-expanded">
<div class="callout-header">Build.cs 파일이 뭔가요?</div>
<p>
언리얼에는 모듈이라는 개념이 있는데 이는 언리얼 엔진의 기본 구성요소다.
모듈을 여러개로 분리한 이유는 사용하지 않는 모듈도 컴파일 하면 빌드 시간이 오래 걸리에 분리한다. 

Build.cs 파일은 이러한 모듈을 관리하는 cs파일로 모듈뿐 아니라 컴파일에 이용 하는 여러 설정을 제어한다.
</p>
</div>]]></content><author><name>Mohitto55</name></author><category term="ue5" /><category term="UE5" /><category term="Unreal Engine5" /><category term="Unreal Engine" /><category term="C++" /><summary type="html"><![CDATA[개요 언리얼엔진은 C++ Class 폴더가 존재한다. 이 폴더에서 프로젝트에 적용하는 모든 C++ 파일들이 들어가게 되는데 해당 폴더안에 폴더를 새로 생성하면 인식이 되지 않는 경우가 있다.]]></summary></entry><entry><title type="html">[UE5] 애니메이션 리타겟팅 완벽히 이해하기</title><link href="http://localhost:4000/ue5/UE5-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EB%A6%AC%ED%83%80%EA%B2%9F%ED%8C%85/" rel="alternate" type="text/html" title="[UE5] 애니메이션 리타겟팅 완벽히 이해하기" /><published>2024-05-20T00:00:00+09:00</published><updated>2024-05-20T00:00:00+09:00</updated><id>http://localhost:4000/ue5/UE5%20%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98%20%EB%A6%AC%ED%83%80%EA%B2%9F%ED%8C%85</id><content type="html" xml:base="http://localhost:4000/ue5/UE5-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EB%A6%AC%ED%83%80%EA%B2%9F%ED%8C%85/"><![CDATA[<h1 id="개요">개요</h1>
<p>언리얼 마켓플레이스나 Mixamo를 둘러보다 보면 좋은 애니메이션들이 많다. 
찾은 애니메이션을 다른 Skeleton에 적용시키려고하면 Skeleton이 일치하지 않아 사용할 수 없는데 Animation Retargeting은 다른 Skeleton에 애니메이션을 사용할 수 있게 만들어주는 기능이다.</p>

<h1 id="mixamo-에셋-가져오기">Mixamo 에셋 가져오기</h1>
<h2 id="원하는-캐릭터로-애니메이션-가져오기">원하는 캐릭터로 애니메이션 가져오기</h2>
<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/1f453bb3-eb17-4157-a4d3-e23b0a7ab833" alt="image" /></p>
<blockquote>
  <p>Mixamo캐릭터에서 원하는 메시를 고른다.</p>
</blockquote>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/9af49e37-74fa-4863-ad66-48b3d37b0dc9" alt="image" /></p>

<h1 id="리타겟팅">리타겟팅</h1>
<h2 id="54-이상">5.4 이상</h2>
<ul>
  <li>5.4 버전부터는 자동으로 애니메이션 리타겟팅이 가능하다.</li>
  <li>하지만 규격이 너무 다르면 부자연스럽기에 수동으로 하는 방식을 추천한다. 
<img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/fb055d90-6790-4818-a3db-f278c7b9c5a9" alt="image" /></li>
</ul>

<h2 id="53-이하">5.3 이하</h2>
<p>언리얼 엔진에서의 애니메이션은 타겟팅한 스켈레톤 하나에 대해서만 작동한다. 그렇기에  원하는 애니메이션을 구해도 타겟팅된 스켈레톤이 다르면 사용할 수 없는데 이런 타겟팅을 바꿀수 있는 것이 리타겟팅이다.</p>

<p>리타겟팅을 하기위해선 스켈레톤의 bone의 규격을 맞춰줘야 한다.</p>

<h3 id="rig-설정">Rig 설정</h3>
<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/937e1c5c-cb71-475a-a29a-7781841bb50e" alt="image" /></p>

<p>서로 다른 스켈레톤간의 리타겟팅을 위한 Rig 규격을 설정해 줘야한다.
애니메이션 스켈레톤 원본인 Source와 해당 스켈레톤으로 변경하고 싶은 Target의 IKRig 두개를 만들어준다.</p>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/9793c784-e6fa-4f46-87aa-29b372fb1cfc" alt="스크린샷 2024-04-07 200353" /></p>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/fbd2d32d-378a-4d19-a114-12a30fadc140" alt="스크린샷 2024-04-07 200408" /></p>

<p>IK_Rig안에서 원하는 스켈레톤을 지정해준다.</p>

<h2 id="세부설정">세부설정</h2>

<h3 id="루트-설정">루트 설정</h3>
<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/26b6b28a-ed45-4d9d-9edf-32be4e678ec6" alt="스크린샷 2024-04-07 200416" /></p>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/9f844a0f-d535-4818-80f5-bd33a20d4d07" alt="image" /></p>

<p>루트를 지정해줘야한다. 루트는 위 처럼 허리부분에 삼각형 표시가 나오는 것으로 지정했다.</p>

<hr />

<h3 id="체인-추가">체인 추가</h3>
<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/11c77e90-f72f-4ea6-bed4-b7e2ddb3ac9d" alt="스크린샷 2024-04-07 200818" /></p>

<p>IK Retargeting탭에서 Add New Chain을 눌러서 라타겟팅 기준이 되는 체인을 생성해준다. 위 과정들은 Source, Target 모두 해준다.</p>

<h2 id="retargeter">Retargeter</h2>

<p>두 IK_Rig를 만들었으면 애니메이션 스켈레톤을 변환할 IK_Retargeter를 만든다.</p>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/522f66cc-d612-4f32-aa1a-f2a701c82c6f" alt="스크린샷 2024-04-07 201344" /></p>

<hr />

<p>Source와 Target의 IK_Rig를 설정해 준다.</p>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/ebcb994c-bed4-40fa-afef-6ae46410cc38" alt="스크린샷 2024-04-07 201431" /></p>

<hr />

<p>그리고 Asset Browser에서 애니메이션 미리보기를 볼 수 있는데 확인해보면</p>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/8123bcb5-5de4-4026-b264-ab7176d935b1" alt="스크린샷 2024-04-07 201614" /></p>

<hr />

<p>애니메이션이 잘 적용 되어있다.
만약 적용했는데 포즈가 많이 엉켜있다면 Detail에서 각 체인별로 IK와 FK를 껏다 켜보면서 맞춰보면 된다.</p>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/8559b383-4879-4883-8877-a592f991b92f" alt="스크린샷 2024-04-07 204610" /></p>

<hr />

<p>그리고 AssetBrowser 아래에 있는 ExportSelectedAnimations를 통해 애니메이션을 Export할 수 있다.</p>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/7ea655ce-f110-44cd-9799-5b27d53a42dd" alt="image" /></p>

<h2 id="apos-tpos-변경하기">APos, TPos 변경하기</h2>
<ul>
  <li>스켈레탈 메쉬들은 APos, TPos로 각각 다르다.</li>
  <li>만약 해당 포즈들을 맞춰주지 않고 리타겟팅을 진행한다면 애니메이션이 깨지는 문제가 발생한다.
<img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/0aae47b1-a16d-469f-85ee-c1c7b790f15c" alt="image" /></li>
</ul>

<hr />
<h3 id="pos-변경하기">Pos 변경하기</h3>
<h4 id="53-미만-버전">5.3 미만 버전</h4>
<ul>
  <li>IK Retargeter에서 직접 포즈를 수정할 수 있는 것으로 보인다.</li>
  <li>정확히 몇버전부터 안돼는지는 확인필요하다.
<img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/804c6179-141b-41c6-9c9b-026cbfcb933d" alt="image" /></li>
</ul>

<h4 id="53-이상">5.3 이상</h4>
<ul>
  <li>SkeletalMesh 혹은 Static Skeleton에셋에 진입해서 원하는 포즈로 변경해준다.
<img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/881fd63a-7cb4-423a-9e99-6ace528f52d8" alt="image" /></li>
</ul>

<hr />

<ul>
  <li>상단부분 Create Asset으로 Current Pose를 눌러서 Pose Asset을 만들어준다.
<img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/f44438ca-a3d9-47f2-a1e6-1f4ffee759d9" alt="image" /></li>
</ul>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/182b7bfe-8e6a-423e-a71d-e4a41ee41d97" alt="image" /></p>

<hr />

<ul>
  <li>IK Retargeter를 열고 Editing Retarget Pose 모드에서 만들어둔 Pose Asset을 가져온다.
<img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/3f197bae-2dbf-44b1-a532-1412c64e25e2" alt="image" /></li>
</ul>

<hr />

<ul>
  <li>
    <p>Current Retarget Pose를 통해서 포즈를 변경해준다.
<img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/7a721685-f31b-4637-9e09-fc12c270544e" alt="image" /></p>
  </li>
  <li>
    <p>적용 후
<img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/c48e7de4-b8bd-4ae0-975b-f53001d3df1a" alt="image" /></p>
  </li>
</ul>

<h2 id="애니메이션이-정확하지-않은데">애니메이션이 정확하지 않은데?</h2>

<ul>
  <li>
    <p>팔이 너무 벌려져 있다.
<img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/5377666c-a76d-4ca4-bb7c-c409ac44cf27" alt="image" /></p>
  </li>
  <li>수정 후</li>
  <li>
    <p>팔 간격이 같아졌다.
<img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/717c20fd-4b69-4d83-b4d5-3f7798ae145d" alt="image" /></p>
  </li>
  <li>모든 체인의 Rotation Mode를 One to One로 바꾼다.
<img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/f93e647b-5fe6-47d2-930b-e6cc88bd9623" alt="image" /></li>
</ul>

<h2 id="공중에-떠있다">공중에 떠있다.</h2>

<ul>
  <li>
    <p>Crouch 모션을 하면 아래처럼 떠있다.
<img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/4c90569e-4d87-4412-a56a-1ddc5daaafb0" alt="image" /></p>
  </li>
  <li>
    <p>수정 후
<img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/1e307783-a762-4420-a5f7-478ae5ba93f6" alt="image" /></p>
  </li>
  <li>
    <p>루트가 포함된 Chain의 TranslationMode를 GloballyScaled로 바꾼다.
<img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/cebb1bc1-f93f-4c32-8cce-f7bda774a4b4" alt="image" /></p>
  </li>
  <li>그리고 애니메이션의 Translation Retargeting을 모두 Animation으로 변경해준다.</li>
  <li>Translation Retargeting
    <ul>
      <li>
        <font color="dodgerred">Animation</font>
        <p> - 애니메이션 데이터에서 비롯되고 변경되지 않는다.</p>
      </li>
      <li>
        <font color="dodgerred">Skeleton</font>
        <p> - 스켈레톤의 bind Pose에 비롯된다.</p>
      </li>
      <li>
        <font color="dodgerred">AnimationScaled</font>
        <p> - 애니메이션 데이터에서 비롯되지만 스켈레톤의 Scale에 따라 비율이 조정된다. 이는 대상 스켈레톤과 소스 스켈레톤의 뼈 길이 사이의 비율이다.</p>
      </li>
    </ul>
  </li>
</ul>

<h4 id="translation-retargeting">Translation Retargeting</h4>
<ul>
  <li>애니메이션은 자신의 기본 스켈레톤 Asset의 데이터를 통해 애니메이션을 수행하려한다.</li>
  <li>Retargeting 데이터를 설정해주지 않으면 애니메이션 데이터를 원래 Skeleton의 Translation data에 적용하려해 에러가 발생할 수 있다.</li>
  <li>하지만 Retargeting한 애니메이션의 경우 자신의 원래 스켈레톤이 아닌 다른 종류의 스켈레톤을 이용해 애니메이션 데이터를 생성했다.</li>
  <li>그래서 Translation Retargeting을 통해 올바른 Skeleton에 애니메이션 데이터를 적용시켜줘야한다.</li>
</ul>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/006ef724-fc57-4078-a82d-af1de2efb51a" alt="image" /></p>

<div class="Reference">
<div class="callout-header"> </div>
<p>
<a href="https://lunchballer.com/archives/1741">https://lunchballer.com/archives/1741</a>
</p>
</div>]]></content><author><name>Mohitto55</name></author><category term="ue5" /><category term="UE5" /><category term="Unreal Engine5" /><category term="Unreal Engine" /><category term="Animation Retargeting" /><summary type="html"><![CDATA[개요 언리얼 마켓플레이스나 Mixamo를 둘러보다 보면 좋은 애니메이션들이 많다. 찾은 애니메이션을 다른 Skeleton에 적용시키려고하면 Skeleton이 일치하지 않아 사용할 수 없는데 Animation Retargeting은 다른 Skeleton에 애니메이션을 사용할 수 있게 만들어주는 기능이다.]]></summary></entry><entry><title type="html">[Unity] 정점이 24개인 큐브 만들기</title><link href="http://localhost:4000/unity/Unity-%EC%A0%95%EC%A0%9024%EA%B0%9C-%ED%81%90%EB%B8%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0/" rel="alternate" type="text/html" title="[Unity] 정점이 24개인 큐브 만들기" /><published>2024-04-12T00:00:00+09:00</published><updated>2024-04-12T00:00:00+09:00</updated><id>http://localhost:4000/unity/Unity%20%EC%A0%95%EC%A0%9024%EA%B0%9C%20%ED%81%90%EB%B8%8C%20%EB%A7%8C%EB%93%A4%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/unity/Unity-%EC%A0%95%EC%A0%9024%EA%B0%9C-%ED%81%90%EB%B8%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0/"><![CDATA[<p>지난번 <a href="https://mohitto55.github.io/unity/Unity-%EC%A0%95%EC%A0%908%EA%B0%9C-%ED%81%90%EB%B8%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0/">정점 8개 큐브 만들기</a>에 이어서 이번엔 정점24개를 가진 큐브를 만들어 볼 것이다.</p>

<h2 id="cube-작성">Cube 작성</h2>
<h3 id="정점위치-참조-테이블">정점위치 참조 테이블</h3>
<p>한 위치에 같은 정점이 3개가 만들어지는데 이 정점의 위치를 매번 계산하는 것 보단 <strong>테이블</strong>로 만들고 면이 테이블에 있는 정점 위치 정보를 가져오게 하는 것이 좋을 것이다.</p>

<p>그러기 위해선 각 면에서 사용할 정점 위치index를 지정해 줘야한다.
먼저 큐브의 각 면들의 방향을 표현한 enum을 선언한다.</p>
<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">public</span> <span class="k">enum</span> <span class="n">Direction</span>
    <span class="p">{</span>
        <span class="n">FORWARD</span><span class="p">,</span> <span class="c1">// (0, 0, 1)</span>
        <span class="n">RIGHT</span><span class="p">,</span>   <span class="c1">// (1, 0, 0)</span>
        <span class="n">UP</span><span class="p">,</span>      <span class="c1">// (0, 1, 0)</span>
        <span class="n">BACK</span><span class="p">,</span>    <span class="c1">// (0, 0, -1)</span>
        <span class="n">LEFT</span><span class="p">,</span>    <span class="c1">// (-1, 0, 0)</span>
        <span class="n">DOWN</span>     <span class="c1">// (0, -1, 0)</span>
    <span class="p">}</span>
</code></pre></div></div>

<hr />

<p>그 다음 면에서 사용하는 정점 Index를 정한다.
유니티에선 Z축이 Forward이기에 Z축 기준으로 정점을 구성해 준다.</p>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/edffa96d-8a33-44f7-ace7-f5898913d147" alt="image" /><em>vertex 순서</em></p>

<hr />

<p><strong>Direction enum</strong>에서 설계한 방향을 토대로 면의 정점을 만든다.</p>
<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kt">int</span><span class="p">[][]</span> <span class="n">faceNumber</span> <span class="p">=</span>
    <span class="p">{</span>
        <span class="k">new</span> <span class="kt">int</span><span class="p">[]{</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">3</span><span class="p">},</span>
        <span class="k">new</span> <span class="kt">int</span><span class="p">[]{</span><span class="m">5</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">6</span><span class="p">},</span>
        <span class="k">new</span> <span class="kt">int</span><span class="p">[]{</span><span class="m">5</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">0</span><span class="p">},</span>
        <span class="k">new</span> <span class="kt">int</span><span class="p">[]{</span><span class="m">4</span><span class="p">,</span><span class="m">5</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">7</span><span class="p">},</span>
        <span class="k">new</span> <span class="kt">int</span><span class="p">[]{</span><span class="m">1</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">2</span><span class="p">},</span>
        <span class="k">new</span> <span class="kt">int</span><span class="p">[]{</span><span class="m">3</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">6</span><span class="p">},</span>
    <span class="p">};</span>
</code></pre></div></div>

<hr />
<h3 id="정점-위치-테이블">정점 위치 테이블</h3>
<p>정점들의 위치 데이터를 가진 테이블을 만들어준다.
Scale을 적용하기 위해 <font color="dodgerred">아다마르 곱</font> 을 해준다.</p>
<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">Vector3</span> <span class="n">scale</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">,</span> <span class="n">width</span><span class="p">);</span>
    <span class="n">List</span><span class="p">&lt;</span><span class="n">Vector3</span><span class="p">&gt;</span> <span class="n">vertices</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Vector3</span><span class="p">&gt;();</span>
    <span class="c1">// 정점들 위치 배열</span>
    <span class="n">vSet</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">Vector3</span><span class="p">.</span><span class="nf">Scale</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">half</span><span class="p">,</span> <span class="n">half</span><span class="p">,</span> <span class="n">half</span><span class="p">),</span> <span class="n">scale</span><span class="p">));</span>
    <span class="n">vSet</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">Vector3</span><span class="p">.</span><span class="nf">Scale</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">half</span><span class="p">,</span> <span class="n">half</span><span class="p">,</span> <span class="n">half</span><span class="p">),</span> <span class="n">scale</span><span class="p">));</span>
    <span class="n">vSet</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">Vector3</span><span class="p">.</span><span class="nf">Scale</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">half</span><span class="p">,</span> <span class="p">-</span><span class="n">half</span><span class="p">,</span> <span class="n">half</span><span class="p">),</span> <span class="n">scale</span><span class="p">));</span>
    <span class="n">vSet</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">Vector3</span><span class="p">.</span><span class="nf">Scale</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">half</span><span class="p">,</span> <span class="p">-</span><span class="n">half</span><span class="p">,</span> <span class="n">half</span><span class="p">),</span> <span class="n">scale</span><span class="p">));</span>
    <span class="n">vSet</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">Vector3</span><span class="p">.</span><span class="nf">Scale</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">half</span><span class="p">,</span> <span class="n">half</span><span class="p">,</span> <span class="p">-</span><span class="n">half</span><span class="p">),</span> <span class="n">scale</span><span class="p">));</span>
    <span class="n">vSet</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">Vector3</span><span class="p">.</span><span class="nf">Scale</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">half</span><span class="p">,</span> <span class="n">half</span><span class="p">,</span> <span class="p">-</span><span class="n">half</span><span class="p">),</span> <span class="n">scale</span><span class="p">));</span>
    <span class="n">vSet</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">Vector3</span><span class="p">.</span><span class="nf">Scale</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">half</span><span class="p">,</span> <span class="p">-</span><span class="n">half</span><span class="p">,</span> <span class="p">-</span><span class="n">half</span><span class="p">),</span> <span class="n">scale</span><span class="p">));</span>
    <span class="n">vSet</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">Vector3</span><span class="p">.</span><span class="nf">Scale</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">half</span><span class="p">,</span> <span class="p">-</span><span class="n">half</span><span class="p">,</span> <span class="p">-</span><span class="n">half</span><span class="p">),</span> <span class="n">scale</span><span class="p">));</span>
</code></pre></div></div>

<div class="callout-info-expanded">
<div class="callout-header">아다마르 곱 (Hadamard Product)</div>
<p>
벡터와 벡터를 각 성분 끼리만 곱하는 행렬 곱이다.
</p>
</div>

<hr />

<h3 id="cube-구현">Cube 구현</h3>
<p>Cube의 면은 6개, 면에 존재하는 정점은 4개 이므로 총 24개의 정점을 만든다. 
면마다 정점이 필요한 이유는 <a href="https://mohitto55.github.io/unity/Unity-%EC%A0%95%EC%A0%908%EA%B0%9C-%ED%81%90%EB%B8%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0/">이전 포스트</a>에서도 말했다시피</p>

<p>정점 하나가 가질 수 있는 uv 정보는 1개 까지라 면 3개에 대한 정보를 가질 수 없다.
그래서 면마다 정점을 만들어주는 것이다.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">faceDir</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">faceDir</span> <span class="p">&lt;</span> <span class="m">6</span><span class="p">;</span> <span class="n">faceDir</span><span class="p">++)</span>
<span class="p">{</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">faceIndex</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">faceIndex</span> <span class="p">&lt;</span> <span class="m">4</span><span class="p">;</span> <span class="n">faceIndex</span><span class="p">++)</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">faceVertexIndex</span> <span class="p">=</span> <span class="n">faceNumber</span><span class="p">[</span><span class="n">faceDir</span><span class="p">][</span><span class="n">faceIndex</span><span class="p">];</span>
        <span class="n">vertices</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">vSet</span><span class="p">[</span><span class="n">faceVertexIndex</span><span class="p">]);</span>
    <span class="p">}</span>
</code></pre></div></div>

<hr />

<p>정점에 대응하는 uv정보와 면을 구성하는 삼각형을 그리기 위해 triangles에 정점 번호를 넣어준다.</p>
<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">uvs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">));</span>
    <span class="n">uvs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">1</span><span class="p">));</span>
    <span class="n">uvs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">0</span><span class="p">));</span>
    <span class="n">uvs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">0</span><span class="p">));</span>

    <span class="kt">int</span> <span class="n">triangleIndex</span> <span class="p">=</span> <span class="n">faceDir</span> <span class="p">*</span> <span class="m">4</span><span class="p">;</span>
    <span class="n">triangles</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">triangleIndex</span> <span class="p">+</span> <span class="m">0</span><span class="p">);</span>
    <span class="n">triangles</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">triangleIndex</span> <span class="p">+</span> <span class="m">1</span><span class="p">);</span>
    <span class="n">triangles</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">triangleIndex</span> <span class="p">+</span> <span class="m">3</span><span class="p">);</span>

    <span class="n">triangles</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">triangleIndex</span> <span class="p">+</span> <span class="m">1</span><span class="p">);</span>
    <span class="n">triangles</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">triangleIndex</span> <span class="p">+</span> <span class="m">2</span><span class="p">);</span>
    <span class="n">triangles</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">triangleIndex</span> <span class="p">+</span> <span class="m">3</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>지금까지 작성한 데이터들을 Mesh로 만들어 MeshFilter에 넣어준다.</p>
<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">Mesh</span> <span class="n">mesh</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Mesh</span><span class="p">();</span>
    <span class="n">mesh</span><span class="p">.</span><span class="n">vertices</span> <span class="p">=</span> <span class="n">vertices</span><span class="p">.</span><span class="nf">ToArray</span><span class="p">();</span>
    <span class="n">mesh</span><span class="p">.</span><span class="n">uv</span> <span class="p">=</span> <span class="n">uvs</span><span class="p">.</span><span class="nf">ToArray</span><span class="p">();</span>
    <span class="n">mesh</span><span class="p">.</span><span class="n">triangles</span> <span class="p">=</span> <span class="n">triangles</span><span class="p">.</span><span class="nf">ToArray</span><span class="p">();</span>
    <span class="n">mesh</span><span class="p">.</span><span class="nf">RecalculateBounds</span><span class="p">();</span>

    <span class="n">GetComponent</span><span class="p">&lt;</span><span class="n">MeshFilter</span><span class="p">&gt;().</span><span class="n">mesh</span> <span class="p">=</span> <span class="n">mesh</span><span class="p">;</span>
</code></pre></div></div>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/f42a96ff-e563-4ba2-97e7-8c150c2e5ff4" alt="image" /><em>완성된 Cube</em></p>

<div class="Reference">
<div class="callout-header"> </div>
<p>
<a href="https://bloodstrawberry.tistory.com/1021">https://bloodstrawberry.tistory.com/1021</a>
</p>
</div>]]></content><author><name>Mohitto55</name></author><category term="unity" /><category term="Unity" /><category term="Cube" /><category term="Mesh" /><summary type="html"><![CDATA[지난번 정점 8개 큐브 만들기에 이어서 이번엔 정점24개를 가진 큐브를 만들어 볼 것이다.]]></summary></entry><entry><title type="html">[Unity] 패럴씽크로 멀티플레이 게임 개발하기</title><link href="http://localhost:4000/unity/Unity-%ED%8C%A8%EB%9F%B4-%EC%8B%B1%ED%81%AC/" rel="alternate" type="text/html" title="[Unity] 패럴씽크로 멀티플레이 게임 개발하기" /><published>2024-04-12T00:00:00+09:00</published><updated>2024-04-12T00:00:00+09:00</updated><id>http://localhost:4000/unity/Unity%20%ED%8C%A8%EB%9F%B4%20%EC%8B%B1%ED%81%AC</id><content type="html" xml:base="http://localhost:4000/unity/Unity-%ED%8C%A8%EB%9F%B4-%EC%8B%B1%ED%81%AC/"><![CDATA[<h2 id="들어가며">들어가며</h2>
<p>멀티플레이 게임을 개발할 때 가장 중요한 것 중 하나가 여러 유저의 동시 접속 기능이다.</p>

<p>예전에 멀티 게임을 구현할 때 시스템이 제대로 작동하는지 테스트하기 위해 게임을 빌드하고 직접 다운 받고 실행하는 방식으로 했었는데 시간이 매우 오래걸리고 비효율 적이였다.</p>

<p>오랜만에 다시 멀티게임을 만들게 되었는데 과거의 끔찍했던 경험을 다시 하고싶지 않아 에디터 상에서 여러화면을 띄우는 방법을 찾게되었다.</p>

<h2 id="parrelsync">ParrelSync</h2>
<ul>
  <li>패럴씽크란 에디터를 복제해 복수의 에디터를 띄울 수 있게 해주는 패키지다.</li>
  <li>이를 통해 빌드를 하지 않고 손쉽게 멀티 플레이게임을 테스트할 수 있다.</li>
</ul>

<h3 id="install">Install</h3>
<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/d67ea733-e603-4428-a7ff-6cb0442720fa" alt="image" /></p>

<p><a href="https://github.com/VeriorPies/ParrelSync/">ParrelSync Github</a>주소로가서 UPM Package 주소 혹은 아래 주소를 복사한다.</p>

<hr />

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://github.com/VeriorPies/ParrelSync.git?path=/ParrelSync
</code></pre></div></div>

<ul>
  <li>그 후 유니티로 돌아가서 UPM 매니저에 복사한 주소를 붙여넣어 설치한다.
패키지 매니저에 대한 설명은 이 <a href="https://docs.unity3d.com/kr/2020.3/Manual/upm-ui.html">링크</a>에서 확인하길 바란다.</li>
</ul>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/80755f1a-498a-4549-b2fc-edb8063ca168" alt="image" /></p>

<hr />

<ul>
  <li>설치가 완료되면 상단에 ParrelSync 탭이 생기는데 그곳에서 Clones Manager를 클릭한다.
<img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/fc40aa2b-a004-41f2-94f0-3e16130c45b3" alt="image" /></li>
</ul>

<hr />

<ul>
  <li>Colnes Manager에서 클론을 생성하면 에디터가 복제가 된것을 볼 수 있다.
<img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/72a2c856-adcc-4f77-87a5-db6c0671a800" alt="image" />
<img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/24476680-7589-4370-8490-90685de1588a" alt="image" /><em>복제된 에디터 화면</em></li>
</ul>

<hr />

<h3 id="다른-예제">다른 예제</h3>
<ul>
  <li>
    <p>ParrelSync도 분명 편하긴 하지만 에디터를 복제해야 할 때 시간이 걸려 유니티 내부에서 다중 클라이언트를 지원하는 기능이 있지 않을까 생각했다.</p>
  </li>
  <li>
    <p>ParrelSync 말고 다른 예제를 찾던 중 애초에 유니티 내부에서 다중 클라이언트를 구동할 수 있는 방법이 있었다. 다음에 이에 대해서 포스트를 해볼 것이다.</p>
  </li>
</ul>

<div class="Reference">
<div class="callout-header"> </div>
<p>
<a href="https://velog.io/@mkang0818/Unity-%ED%8C%A8%EB%9F%B4%EC%94%BD%ED%81%AC-%EB%A9%80%ED%8B%B0%EA%B2%8C%EC%9E%84-%EA%B0%9C%EB%B0%9C-%EB%95%8C-%ED%99%94%EB%A9%B4-%EC%97%AC%EB%9F%AC%EA%B0%9C-%EB%9D%84%EC%9A%B0%EA%B8%B0">https://velog.io/@mkang0818/Unity-%ED%8C%A8%EB%9F%B4%EC%94%BD%ED%81%AC-%EB%A9%80%ED%8B%B0%EA%B2%8C%EC%9E%84-%EA%B0%9C%EB%B0%9C-%EB%95%8C-%ED%99%94%EB%A9%B4-%EC%97%AC%EB%9F%AC%EA%B0%9C-%EB%9D%84%EC%9A%B0%EA%B8%B0</a>
<a href="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/d67ea733-e603-4428-a7ff-6cb0442720fa">https://github.com/mohitto55/mohitto55.github.io/assets/154340583/d67ea733-e603-4428-a7ff-6cb0442720fa</a>
</p>
</div>]]></content><author><name>Mohitto55</name></author><category term="unity" /><category term="Unity" /><category term="MultiPlay" /><summary type="html"><![CDATA[들어가며 멀티플레이 게임을 개발할 때 가장 중요한 것 중 하나가 여러 유저의 동시 접속 기능이다.]]></summary></entry><entry><title type="html">[Unity] 정점이 8개인 Cube 만들기</title><link href="http://localhost:4000/unity/Unity-%EC%A0%95%EC%A0%908%EA%B0%9C-%ED%81%90%EB%B8%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0/" rel="alternate" type="text/html" title="[Unity] 정점이 8개인 Cube 만들기" /><published>2024-04-11T00:00:00+09:00</published><updated>2024-04-11T00:00:00+09:00</updated><id>http://localhost:4000/unity/Unity%20%EC%A0%95%EC%A0%908%EA%B0%9C%20%ED%81%90%EB%B8%8C%20%EB%A7%8C%EB%93%A4%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/unity/Unity-%EC%A0%95%EC%A0%908%EA%B0%9C-%ED%81%90%EB%B8%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0/"><![CDATA[<p>유니티 큐브의 정점갯수는 기본적으로 24개다.</p>

<p>정점 8개만 이용해도 큐브를 만들 수 있지 않나 싶어서 만들어보았다.</p>

<h2 id="cube-만들기">Cube 만들기</h2>
<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/13883c6d-2d30-4f2f-914c-f380fcf18748" alt="image" /><em>vertex 순서</em></p>

<p>우선 정점을 만들어준다. 정점의 순서는 위와 같이 정했으며 이를 구현한다.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kt">float</span> <span class="n">halfWidth</span> <span class="p">=</span> <span class="n">width</span> <span class="p">/</span> <span class="m">2</span><span class="p">;</span>
    <span class="kt">float</span> <span class="n">halfHeight</span> <span class="p">=</span> <span class="n">height</span> <span class="p">/</span> <span class="m">2</span><span class="p">;</span>
    <span class="n">List</span><span class="p">&lt;</span><span class="n">Vector3</span><span class="p">&gt;</span> <span class="n">vertexs</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Vector3</span><span class="p">&gt;();</span>

    <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">halfWidth</span><span class="p">,</span> <span class="p">-</span><span class="n">halfHeight</span><span class="p">,</span> <span class="p">-</span><span class="n">halfWidth</span><span class="p">));</span>
    <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">halfWidth</span><span class="p">,</span> <span class="p">-</span><span class="n">halfHeight</span><span class="p">,</span> <span class="n">halfWidth</span><span class="p">));</span>
    <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">halfWidth</span><span class="p">,</span> <span class="n">halfHeight</span><span class="p">,</span> <span class="n">halfWidth</span><span class="p">));</span>
    <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">halfWidth</span><span class="p">,</span> <span class="n">halfHeight</span><span class="p">,</span> <span class="p">-</span><span class="n">halfWidth</span><span class="p">));</span>
    <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">halfWidth</span><span class="p">,</span> <span class="p">-</span><span class="n">halfHeight</span><span class="p">,</span> <span class="p">-</span><span class="n">halfWidth</span><span class="p">));</span>
    <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">halfWidth</span><span class="p">,</span> <span class="p">-</span><span class="n">halfHeight</span><span class="p">,</span> <span class="n">halfWidth</span><span class="p">));</span>
    <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">halfWidth</span><span class="p">,</span> <span class="n">halfHeight</span><span class="p">,</span> <span class="n">halfWidth</span><span class="p">));</span>
    <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">halfWidth</span><span class="p">,</span> <span class="n">halfHeight</span><span class="p">,</span> <span class="p">-</span><span class="n">halfWidth</span><span class="p">));</span>
</code></pre></div></div>

<hr />
<p>vertex 정보를 토대로 triangle를 지정하여준다.
방향은 시계방향으로 해야 큐브 바깥쪽 방향으로 메쉬가 생성된다.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">triangles</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;()</span>
    <span class="p">{</span>
        <span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">,</span>
        <span class="m">0</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">4</span><span class="p">,</span>
        <span class="m">7</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">5</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">5</span><span class="p">,</span><span class="m">4</span><span class="p">,</span>
        <span class="m">6</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">5</span><span class="p">,</span>
        <span class="m">6</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">3</span><span class="p">,</span>
        <span class="m">5</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">5</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">4</span>
    <span class="p">};</span>
</code></pre></div></div>

<p>이렇게 생성한 정보를 토대로 Mesh에 옮겨준다.</p>
<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">mesh</span><span class="p">.</span><span class="n">vertices</span> <span class="p">=</span> <span class="n">vertexs</span><span class="p">.</span><span class="nf">ToArray</span><span class="p">();</span>
    <span class="n">mesh</span><span class="p">.</span><span class="n">triangles</span> <span class="p">=</span> <span class="n">triangles</span><span class="p">.</span><span class="nf">ToArray</span><span class="p">();</span>

    <span class="n">mesh</span><span class="p">.</span><span class="nf">RecalculateBounds</span><span class="p">();</span>
    <span class="n">GetComponent</span><span class="p">&lt;</span><span class="n">MeshFilter</span><span class="p">&gt;().</span><span class="n">mesh</span> <span class="p">=</span> <span class="n">mesh</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="전체-코드">전체 코드</h3>
<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">void</span> <span class="nf">GenerateCube</span><span class="p">(</span><span class="kt">float</span> <span class="n">width</span><span class="p">,</span> <span class="kt">float</span> <span class="n">height</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Mesh</span> <span class="n">mesh</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Mesh</span><span class="p">();</span>

        <span class="kt">float</span> <span class="n">halfWidth</span> <span class="p">=</span> <span class="n">width</span> <span class="p">/</span> <span class="m">2</span><span class="p">;</span>
        <span class="kt">float</span> <span class="n">halfHeight</span> <span class="p">=</span> <span class="n">height</span> <span class="p">/</span> <span class="m">2</span><span class="p">;</span>
        <span class="n">List</span><span class="p">&lt;</span><span class="n">Vector3</span><span class="p">&gt;</span> <span class="n">vertexs</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Vector3</span><span class="p">&gt;();</span>

        <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">halfWidth</span><span class="p">,</span> <span class="p">-</span><span class="n">halfHeight</span><span class="p">,</span> <span class="p">-</span><span class="n">halfWidth</span><span class="p">));</span>
        <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">halfWidth</span><span class="p">,</span> <span class="p">-</span><span class="n">halfHeight</span><span class="p">,</span> <span class="n">halfWidth</span><span class="p">));</span>
        <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">halfWidth</span><span class="p">,</span> <span class="n">halfHeight</span><span class="p">,</span> <span class="n">halfWidth</span><span class="p">));</span>
        <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(-</span><span class="n">halfWidth</span><span class="p">,</span> <span class="n">halfHeight</span><span class="p">,</span> <span class="p">-</span><span class="n">halfWidth</span><span class="p">));</span>
        <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">halfWidth</span><span class="p">,</span> <span class="p">-</span><span class="n">halfHeight</span><span class="p">,</span> <span class="p">-</span><span class="n">halfWidth</span><span class="p">));</span>
        <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">halfWidth</span><span class="p">,</span> <span class="p">-</span><span class="n">halfHeight</span><span class="p">,</span> <span class="n">halfWidth</span><span class="p">));</span>
        <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">halfWidth</span><span class="p">,</span> <span class="n">halfHeight</span><span class="p">,</span> <span class="n">halfWidth</span><span class="p">));</span>
        <span class="n">vertexs</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">halfWidth</span><span class="p">,</span> <span class="n">halfHeight</span><span class="p">,</span> <span class="p">-</span><span class="n">halfWidth</span><span class="p">));</span>

        <span class="n">List</span><span class="p">&lt;</span><span class="n">Vector2</span><span class="p">&gt;</span> <span class="n">uvs</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Vector2</span><span class="p">&gt;</span>
        <span class="p">{</span>
            <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0f</span><span class="p">,</span> <span class="m">1f</span><span class="p">),</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">1f</span><span class="p">,</span><span class="m">1f</span><span class="p">),</span>
            <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0f</span><span class="p">,</span> <span class="m">0f</span><span class="p">),</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">1f</span><span class="p">,</span><span class="m">0f</span><span class="p">),</span>
            <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0f</span><span class="p">,</span> <span class="m">1f</span><span class="p">),</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">1f</span><span class="p">,</span><span class="m">1f</span><span class="p">),</span>
            <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0f</span><span class="p">,</span> <span class="m">0f</span><span class="p">),</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">1f</span><span class="p">,</span><span class="m">0f</span><span class="p">)</span>
        <span class="p">};</span>

        <span class="n">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span> <span class="n">triangles</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;()</span>
        <span class="p">{</span>
            <span class="m">0</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">,</span>
            <span class="m">0</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">4</span><span class="p">,</span>
            <span class="m">7</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">5</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">5</span><span class="p">,</span><span class="m">4</span><span class="p">,</span>
            <span class="m">6</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">5</span><span class="p">,</span>
            <span class="m">6</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">3</span><span class="p">,</span>
            <span class="m">5</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">5</span><span class="p">,</span><span class="m">0</span><span class="p">,</span><span class="m">4</span>
        <span class="p">};</span>
        
        <span class="n">mesh</span><span class="p">.</span><span class="n">vertices</span> <span class="p">=</span> <span class="n">vertexs</span><span class="p">.</span><span class="nf">ToArray</span><span class="p">();</span>
        <span class="n">mesh</span><span class="p">.</span><span class="n">triangles</span> <span class="p">=</span> <span class="n">triangles</span><span class="p">.</span><span class="nf">ToArray</span><span class="p">();</span>

        <span class="n">mesh</span><span class="p">.</span><span class="nf">RecalculateBounds</span><span class="p">();</span>
        <span class="n">GetComponent</span><span class="p">&lt;</span><span class="n">MeshFilter</span><span class="p">&gt;().</span><span class="n">mesh</span> <span class="p">=</span> <span class="n">mesh</span><span class="p">;</span>
    <span class="p">}</span>
</code></pre></div></div>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/aa900bc4-c0f5-4a9d-a086-4816e876855e" alt="image" /><em>완성된 정점8개 큐브</em></p>

<h2 id="단점">단점</h2>
<p>정점 8개만 있어도 큐브를 만들 수 있지만 문제는 uv를 통한 라이팅과 Material 표현이 불가능했다.</p>

<div class="language-cs highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">List</span><span class="p">&lt;</span><span class="n">Vector2</span><span class="p">&gt;</span> <span class="n">uvs</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Vector2</span><span class="p">&gt;</span>
    <span class="p">{</span>
        <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0f</span><span class="p">,</span> <span class="m">1f</span><span class="p">),</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">1f</span><span class="p">,</span><span class="m">1f</span><span class="p">),</span>
        <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0f</span><span class="p">,</span> <span class="m">0f</span><span class="p">),</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">1f</span><span class="p">,</span><span class="m">0f</span><span class="p">),</span>
        <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0f</span><span class="p">,</span> <span class="m">1f</span><span class="p">),</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">1f</span><span class="p">,</span><span class="m">1f</span><span class="p">),</span>
        <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0f</span><span class="p">,</span> <span class="m">0f</span><span class="p">),</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">1f</span><span class="p">,</span><span class="m">0f</span><span class="p">)</span>
    <span class="p">};</span>
</code></pre></div></div>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/5cb348fc-4c48-490f-bc7f-2cbdfb9a1f93" alt="image" /><em>깨져버린 Material</em></p>

<hr />

<h3 id="원인">원인</h3>
<p>이는 uv하나가 표현해야할 면이 3개이지만 1개를 초과하는 정보를 담당할 수 없기 떄문이다. 각 면마다 사용해야할 uv 정보가 다 다른데 겹쳐서 저렇게 깨져버린 것이다.</p>

<p>그래서 유니티에선 정점을 24개로 구현해 각 면마다 사용할 uv정보를 담아주었다.</p>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/5e4a0aa5-69de-44e6-9cdf-8c9c913cd856" alt="image" /><em>유니티 Cube</em></p>

<div class="Reference">
<div class="callout-header"> </div>
<p>
<a href="https://bloodstrawberry.tistory.com/1016">https://bloodstrawberry.tistory.com/1016</a>
</p>
</div>]]></content><author><name>Mohitto55</name></author><category term="unity" /><category term="Unity" /><category term="Mesh" /><category term="Cube" /><category term="UV" /><summary type="html"><![CDATA[유니티 큐브의 정점갯수는 기본적으로 24개다.]]></summary></entry><entry><title type="html">[Obsidian] CSS 적용하며 PDF로 내보내는법</title><link href="http://localhost:4000/obsidian/Obsidian-PDF-Export/" rel="alternate" type="text/html" title="[Obsidian] CSS 적용하며 PDF로 내보내는법" /><published>2024-04-06T00:00:00+09:00</published><updated>2024-04-06T00:00:00+09:00</updated><id>http://localhost:4000/obsidian/Obsidian%20PDF%20Export</id><content type="html" xml:base="http://localhost:4000/obsidian/Obsidian-PDF-Export/"><![CDATA[<h2 id="pdf-출력">PDF 출력</h2>
<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/10ba20e0-7a36-4e9f-98d0-46aea8136612" alt="image" /></p>

<p>옵시디언을 통해 내용을 정리하고 다양한 기능들을 이용해 꾸민뒤 PDF로 변환해야할 때가 있다. 그런데 이상하게도 css로 열심히 꾸며도 PDF로 출력만 하면은 제대로 적용이 되지 않은채 변환되곤한다.</p>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/ee11d162-e739-44b9-b083-f7a466eb63c9" alt="image" /><em>같은 내용 다른 느낌</em></p>

<p>어떻게든 CSS를 제대로 적용시키고 싶어서 ITEXT로 PDF로 변환도 해보고 기존 CSS를 수정하는 등 여러 시행착오를 거쳐서 변환 전 모습과 거의 비슷하게 만드는데 성공했다.</p>

<h2 id="원인">원인</h2>
<p>옵시디언에선 일반적인 노트에서 적용되는 css와 PDF 출력시 적용되는 css가 따로 있다. 그렇게 PDF로 적용되는 CSS는 <font color="dodgerred">@media print</font>라는 body 안에 작성되어야 한다. 나의 경우 AnuPpuccin 테마를 이용중인데 이 테마는 PDF 출력시 css 적용 기능을 대부분 지원하지 않고 있다. 왜 그런가 하니</p>

<blockquote>
  <p>afaik this is an issue with the default theme as well, though i’ve made some adjustments to make it more readable in dark mode. the major problem is that the white background cannot be changed with any kind of CSS.</p>
  <ul>
    <li><a href="https://github.com/AnubisNekhet/AnuPpuccin/issues/48">아누푸친 개발자</a></li>
  </ul>
</blockquote>

<p>요약하면 흰 배경을 바꾸는 기능이 없다고 하는 것인데 아마 많은 기능이 이런 이유로 지원되지 않는 듯 싶다. 그런데 찾아보니 배경 색을 바꾸는 기능이 존재하였는데 테마 개발자가 몰랐든지 뭔가 이유가 있지 않을까 싶다.</p>

<h2 id="pdf-출력-전용-css-작성">PDF 출력 전용 CSS 작성</h2>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">@media</span> <span class="n">print</span><span class="p">{</span>
<span class="p">}</span>
</code></pre></div></div>
<p>PDF에서 적용되는 css를 작성하기 위해선 <code class="language-plaintext highlighter-rouge">@media print</code>안에서 작성해야 한다. 그럼 이안에 테마에서 쓰는 css를 모두 복사 붙여넣기 하면 되는 것 아닌가 싶지만 아쉽게도 되지 않았다. 그래서 내용을 모두 하나 하나 작성해야하는데 다행히도 누군가 템플릿을 하나 작성해주었다.</p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">/* Obsidian snippet to style output of pdf exports
 */</span>

<span class="k">@media</span> <span class="n">print</span> <span class="p">{</span>

  <span class="c">/* set your preferred fonts here.
   */</span>

  <span class="nd">:root</span> <span class="p">{</span>
    <span class="py">--body-font-family</span><span class="p">:</span> <span class="s1">"Newsreader Text"</span><span class="p">,</span> <span class="n">TimesNewRoman</span><span class="p">,</span> <span class="s1">"Times New Roman"</span><span class="p">,</span> <span class="n">Times</span><span class="p">,</span> <span class="n">Baskerville</span><span class="p">,</span> <span class="n">Georgia</span><span class="p">,</span> <span class="nb">serif</span><span class="p">;</span>
    <span class="py">--header-font-family</span><span class="p">:</span> <span class="s1">"Century Gothic"</span><span class="p">,</span> <span class="n">CenturyGothic</span><span class="p">,</span> <span class="n">AppleGothic</span><span class="p">,</span> <span class="nb">sans-serif</span><span class="p">;</span>
    <span class="py">--code-font-family</span><span class="p">:</span> <span class="n">MonoLisa</span><span class="p">,</span> <span class="n">Menlo</span><span class="p">,</span> <span class="n">SFMono-Regular</span><span class="p">,</span> <span class="n">Consolas</span><span class="p">,</span> <span class="s1">"Roboto Mono"</span><span class="p">,</span> <span class="nb">monospace</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="nt">body</span> <span class="p">{</span>
    <span class="nl">width</span><span class="p">:</span> <span class="m">100%</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">margin</span><span class="p">:</span> <span class="m">0</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">padding</span><span class="p">:</span> <span class="m">0</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">background</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="c">/* If you find your font settings ae not being used for an element,
   * Add it below. You can fund the element by inspecting the document
   * in "Reading" mode in the console.
   */</span>
  <span class="nt">body</span><span class="o">,</span> <span class="nt">p</span><span class="o">,</span> <span class="nt">li</span><span class="o">,</span> <span class="nt">div</span><span class="nc">.callout</span> <span class="p">{</span>
    <span class="nl">line-height</span><span class="p">:</span> <span class="m">1.4</span><span class="p">;</span>
    <span class="nl">word-spacing</span><span class="p">:</span> <span class="m">1.1pt</span><span class="p">;</span>
    <span class="nl">letter-spacing</span><span class="p">:</span> <span class="m">0.2pt</span><span class="p">;</span>
    <span class="nl">font-family</span><span class="p">:</span> <span class="n">var</span><span class="p">(</span><span class="n">--body-font-family</span><span class="p">);</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">12pt</span>
  <span class="p">}</span>

  <span class="c">/* */</span>

  <span class="nt">h1</span><span class="o">,</span> <span class="nt">h2</span><span class="o">,</span> <span class="nt">h3</span><span class="o">,</span> <span class="nt">h4</span><span class="o">,</span> <span class="nt">h5</span><span class="o">,</span> <span class="nt">h6</span> <span class="p">{</span>
    <span class="nl">font-family</span><span class="p">:</span> <span class="n">var</span><span class="p">(</span><span class="n">--header-font-family</span><span class="p">);</span>
    <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">normal</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">h1</span> <span class="p">{</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">19pt</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">h2</span> <span class="p">{</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">17pt</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">h3</span> <span class="p">{</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">15pt</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">h4</span><span class="o">,</span> <span class="nt">h5</span><span class="o">,</span> <span class="nt">h6</span> <span class="p">{</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">12pt</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">code</span><span class="o">,</span> <span class="nt">code</span><span class="o">[</span><span class="nt">class</span><span class="o">*=</span><span class="s1">"language-"</span><span class="o">],</span>
  <span class="nt">pre</span><span class="o">,</span> <span class="nt">pre</span><span class="o">[</span><span class="nt">class</span><span class="o">*=</span><span class="s1">"language-"</span><span class="o">]</span> <span class="p">{</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">10pt</span><span class="p">;</span>
    <span class="nl">font-family</span><span class="p">:</span> <span class="n">var</span><span class="p">(</span><span class="n">--code-font-family</span><span class="p">);</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">black</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">background</span><span class="p">:</span> <span class="nb">none</span> <span class="cp">!important</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="nt">pre</span><span class="o">,</span>
  <span class="nt">code</span> <span class="nt">span</span><span class="o">,</span>
  <span class="nt">code</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">black</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">code</span> <span class="p">{</span>
    <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="no">darkgray</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">padding</span><span class="p">:</span> <span class="m">0</span> <span class="m">0.2em</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">line-height</span><span class="p">:</span> <span class="n">initial</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">border-radius</span><span class="p">:</span> <span class="m">4px</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">pre</span> <span class="p">{</span>
    <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="no">darkgray</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">margin</span><span class="p">:</span> <span class="m">1em</span> <span class="m">0px</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">padding</span><span class="p">:</span> <span class="m">0.5em</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">border-radius</span><span class="p">:</span> <span class="m">4px</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">pre</span> <span class="o">&gt;</span> <span class="nt">code</span> <span class="p">{</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">12px</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">border</span><span class="p">:</span> <span class="nb">none</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">border-radius</span><span class="p">:</span> <span class="m">0</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">border-radius</span><span class="p">:</span> <span class="m">4px</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">blockquote</span> <span class="p">{</span>
    <span class="nl">margin</span><span class="p">:</span> <span class="m">1.3em</span><span class="p">;</span>
    <span class="nl">padding</span><span class="p">:</span> <span class="m">1em</span><span class="p">;</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">10pt</span><span class="p">;</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">darkslategray</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">hr</span> <span class="p">{</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="m">#ccc</span>
  <span class="p">}</span>

  <span class="nt">img</span> <span class="p">{</span>
    <span class="nl">display</span><span class="p">:</span><span class="nb">block</span><span class="p">;</span>
    <span class="nl">margin</span><span class="p">:</span> <span class="m">1em</span> <span class="m">0</span>
  <span class="p">}</span>

  <span class="nt">a</span> <span class="nt">img</span> <span class="p">{</span>
    <span class="nl">border</span><span class="p">:</span> <span class="nb">none</span>
  <span class="p">}</span>

  <span class="nt">table</span> <span class="p">{</span>
    <span class="nl">margin</span><span class="p">:</span> <span class="m">1px</span><span class="p">;</span>
    <span class="nl">text-align</span><span class="p">:</span> <span class="nb">left</span>
  <span class="p">}</span>

  <span class="nt">th</span> <span class="p">{</span>
    <span class="nl">border-bottom</span><span class="p">:</span> <span class="m">1px</span> <span class="n">aolis</span> <span class="m">#333</span>
  <span class="p">}</span>

  <span class="nt">td</span> <span class="p">{</span>
    <span class="nl">border-bottom</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="m">#333</span>
  <span class="p">}</span>

  <span class="nt">th</span><span class="o">,</span><span class="nt">td</span><span class="o">,</span> <span class="nt">tr</span> <span class="p">{</span>
    <span class="nl">padding</span><span class="p">:</span> <span class="m">4px</span> <span class="m">10px</span> <span class="m">4px</span> <span class="m">0</span><span class="p">;</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">black</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">background</span><span class="p">:</span> <span class="nb">none</span> <span class="cp">!important</span>
  <span class="p">}</span>

  <span class="nt">tfoot</span> <span class="p">{</span>
    <span class="nl">font-style</span><span class="p">:</span> <span class="nb">italic</span>
  <span class="p">}</span>

  <span class="nt">caption</span> <span class="p">{</span>
    <span class="nl">background</span><span class="p">:</span> <span class="m">#fff</span><span class="p">;</span>
    <span class="nl">margin-bottom</span><span class="p">:</span> <span class="m">2em</span><span class="p">;</span>
    <span class="nl">text-align</span><span class="p">:</span> <span class="nb">left</span>
  <span class="p">}</span>

  <span class="nt">thead</span> <span class="p">{</span>
    <span class="nl">display</span><span class="p">:</span> <span class="nb">table-header-group</span>
  <span class="p">}</span>

  <span class="nt">tr</span> <span class="p">{</span>
    <span class="nl">page-break-inside</span><span class="p">:</span> <span class="nb">avoid</span>
  <span class="p">}</span>

  <span class="nt">a</span> <span class="p">{</span>
    <span class="nl">text-decoration</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">black</span> <span class="cp">!important</span>
  <span class="p">}</span>


  <span class="nt">a</span><span class="o">[</span><span class="nt">aria-label</span><span class="o">]</span><span class="nd">::after</span> <span class="p">{</span>
    <span class="nl">display</span><span class="p">:</span> <span class="nb">inline</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">content</span><span class="p">:</span> <span class="s1">" ("</span> <span class="n">attr</span><span class="p">(</span><span class="n">aria-label</span><span class="p">)</span> <span class="s1">")"</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">slategray</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">70%</span> <span class="cp">!important</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="nt">a</span><span class="o">[</span><span class="nt">class</span><span class="o">=</span><span class="s1">"tag"</span><span class="o">]</span> <span class="p">{</span>
    <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">bold</span><span class="p">;</span>
    <span class="nl">font-family</span><span class="p">:</span> <span class="n">var</span><span class="p">(</span><span class="n">--font-monospace</span><span class="p">);</span>
    <span class="nl">background</span><span class="p">:</span> <span class="nb">none</span>
  <span class="p">}</span>

  <span class="nc">.callout</span> <span class="p">{</span>
    <span class="nl">background</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
    <span class="nl">border-width</span><span class="p">:</span> <span class="m">1px</span><span class="p">;</span>
    <span class="nl">border-color</span><span class="p">:</span> <span class="n">rgba</span><span class="p">(</span><span class="n">var</span><span class="p">(</span><span class="n">--callout-color</span><span class="p">),</span> <span class="m">0.75</span><span class="p">)</span>
  <span class="p">}</span>

  <span class="c">/* -=-=-=-=-=-=-
   * Specific to custom checkboxes in @kepano's minimal theme
   */</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"/"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">input</span><span class="o">[</span><span class="nt">type</span><span class="o">=</span><span class="nt">checkbox</span><span class="o">]</span><span class="nd">:checked::after</span> <span class="p">{</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="no">black</span>
  <span class="p">}</span>

  <span class="nt">input</span><span class="o">[</span><span class="nt">type</span><span class="o">=</span><span class="nt">checkbox</span><span class="o">]</span><span class="nd">:checked</span> <span class="p">{</span>
    <span class="nl">background</span><span class="p">:</span> <span class="nb">none</span>
  <span class="p">}</span>

  <span class="nt">ul</span><span class="o">&gt;</span><span class="nt">li</span><span class="nc">.task-list-item</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"x"</span><span class="o">]</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">black</span>
  <span class="p">}</span>

  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"!"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"*"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s2">'"'</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"l"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"b"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"i"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"S"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"I"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"p"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"c"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"f"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"k"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"w"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"u"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"d"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span><span class="o">,</span>
  <span class="nt">li</span><span class="o">[</span><span class="nt">data-task</span><span class="o">=</span><span class="s1">"?"</span><span class="o">]&gt;</span><span class="nt">input</span><span class="nd">:checked::after</span> <span class="p">{</span>
    <span class="nl">background</span><span class="p">:</span> <span class="nb">none</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">-webkit-mask-image</span><span class="p">:</span> <span class="nb">none</span> <span class="cp">!important</span>
  <span class="p">}</span>
  <span class="c">/* -=-=-=-=-=-=- */</span>

<span class="p">}</span>
</code></pre></div></div>
<p><a href="https://gist.github.com/ScottKillen/499246e2f44fc1b59d8ff3795311f21f?permalink_comment_id=4503094">CSS 템플릿</a></p>

<p>이것만으로도 많은 경우를 커버할 수 있지만 저것만으론 부족하다 그래서 다른 기능들도 추가로 작성해야한다.</p>

<hr />

<h3 id="백그라운드-컬러">백그라운드 컬러</h3>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nc">.print</span> <span class="nc">.markdown-preview-view</span> <span class="p">{</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="m">#1E1E2E</span><span class="p">;</span>
    <span class="nl">color</span><span class="p">:</span> <span class="n">var</span><span class="p">(</span><span class="n">--text-normal</span><span class="p">);</span>
  <span class="c">/* -=-=-=-=-=-=- */</span>
<span class="p">}</span>
</code></pre></div></div>
<p>배경 색상을 바꾼다.</p>

<hr />

<h3 id="코드블럭-색상">코드블럭 색상</h3>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">/*코드블럭 색상 변경*/</span>
  <span class="nt">code</span><span class="o">,</span> <span class="nt">code</span><span class="o">[</span><span class="nt">class</span><span class="o">*=</span><span class="s1">"language-"</span><span class="o">],</span>
  <span class="nt">pre</span><span class="o">,</span> <span class="nt">pre</span><span class="o">[</span><span class="nt">class</span><span class="o">*=</span><span class="s1">"language-"</span><span class="o">]</span> <span class="p">{</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="m">10pt</span><span class="p">;</span>
    <span class="nl">font-family</span><span class="p">:</span> <span class="n">var</span><span class="p">(</span><span class="n">--code-font-family</span><span class="p">);</span>
    <span class="nl">color</span><span class="p">:</span> <span class="m">#79C1CF</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">background</span><span class="p">:</span> <span class="nb">none</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="m">#11111B</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">margin</span><span class="p">:</span> <span class="m">0px</span> <span class="cp">!important</span><span class="p">;</span>
  <span class="p">}</span>


<span class="nc">.token.block-comment</span><span class="o">,</span>
<span class="nc">.token.cdata</span><span class="o">,</span>
<span class="nc">.token.comment</span><span class="o">,</span>
<span class="nc">.token.doctype</span><span class="o">,</span>
<span class="nc">.token.prolog</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="m">#B2BADD</span> <span class="cp">!important</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.token.punctuation</span><span class="o">,</span>
<span class="nc">.token.class-name</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="m">#B2BADD</span> <span class="cp">!important</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.token.boolean</span><span class="o">,</span>
<span class="nc">.token.constant</span><span class="o">,</span>
<span class="nc">.token.deleted</span><span class="o">,</span>
<span class="nc">.token.function-name</span><span class="o">,</span>
<span class="nc">.token.number</span><span class="o">,</span>
<span class="nc">.token.property</span><span class="o">,</span>
<span class="nc">.token.symbol</span><span class="o">,</span>
<span class="nc">.token.tag</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="m">#79C1CF</span> <span class="cp">!important</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.token.entity</span><span class="o">,</span>
<span class="nc">.token.operator</span><span class="o">,</span>
<span class="nc">.token.url</span><span class="p">{</span>
  <span class="nl">color</span><span class="p">:</span> <span class="m">#DF809B</span> <span class="cp">!important</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.token.keyword</span> <span class="p">{</span>
  <span class="nl">color</span><span class="p">:</span> <span class="m">#EEBCE1</span> <span class="cp">!important</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.token.attr-name</span><span class="o">,</span>
<span class="nc">.token.builtin</span><span class="o">,</span>
<span class="nc">.token.char</span><span class="o">,</span>
<span class="nc">.token.function</span><span class="o">,</span>
<span class="nc">.token.inserted</span><span class="o">,</span>
<span class="nc">.token.selector</span><span class="o">,</span>
<span class="nc">.token.string</span><span class="o">,</span>
<span class="nc">.token.variable</span>
 <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="m">#EED8A8</span> <span class="cp">!important</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.token.atrule</span><span class="o">,</span>
<span class="nc">.token.attr-value</span><span class="o">,</span>
<span class="nc">.token.class-name</span> <span class="p">{</span>
  <span class="c">/*EED8A8*/</span>
    <span class="nl">color</span><span class="p">:</span> <span class="m">#79C1CF</span> <span class="cp">!important</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.token.important</span><span class="o">,</span>
<span class="nc">.token.regex</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="m">#e90</span>
<span class="p">}</span>
</code></pre></div></div>
<p>코드블럭 내부에 있는 다양한 글자 색상을 변경한다.</p>

<hr />
<h3 id="bold-italic-체-색상">Bold, Italic 체 색상</h3>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">strong</span><span class="p">{</span>
    <span class="nl">color</span> <span class="p">:</span><span class="m">#DF809B</span> <span class="cp">!important</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="c">/*이태릭 색깔 정하기*/</span>
  <span class="nt">em</span><span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span><span class="m">#A5E1A0</span> <span class="cp">!important</span><span class="p">;</span>
  <span class="p">}</span>
</code></pre></div></div>

<hr />
<h3 id="콜아웃-색상">콜아웃 색상</h3>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nc">.callout</span> <span class="p">{</span>
    <span class="nl">background</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
    <span class="nl">border-width</span><span class="p">:</span> <span class="m">0px</span><span class="p">;</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="n">rgba</span><span class="p">(</span><span class="n">var</span><span class="p">(</span><span class="n">--callout-color</span><span class="p">),</span> <span class="m">0.15</span><span class="p">)</span> <span class="cp">!important</span><span class="p">;</span>
    <span class="nl">border-color</span><span class="p">:</span> <span class="n">rgba</span><span class="p">(</span><span class="n">var</span><span class="p">(</span><span class="n">--callout-color</span><span class="p">),</span> <span class="m">0.75</span><span class="p">)</span> <span class="cp">!important</span><span class="p">;</span>
  <span class="p">}</span>
</code></pre></div></div>
<p>콜아웃의 색을 변경한다. 다만 타이틀 부분 색상이 변경이 되지 않는데 이후에 변경 방법을 발견하면 추가하겠다.</p>

<div class="Reference">
<div class="callout-header"> </div>
<p>
<a href="https://gist.github.com/ScottKillen/499246e2f44fc1b59d8ff3795311f21f?permalink_comment_id=4503094">https://gist.github.com/ScottKillen/499246e2f44fc1b59d8ff3795311f21f?permalink_comment_id=4503094</a>
<a href="https://forum.obsidian.md/t/how-to-style-the-pdf-with-media-print/9673">https://forum.obsidian.md/t/how-to-style-the-pdf-with-media-print/9673</a>
<a href="https://kaminik.tistory.com/entry/CSS-Snippet-%EC%BD%94%EB%93%9C%EB%B8%94%EB%A1%9D-%EC%8A%A4%ED%83%80%EC%9D%BCLight-mode">https://kaminik.tistory.com/entry/CSS-Snippet-%EC%BD%94%EB%93%9C%EB%B8%94%EB%A1%9D-%EC%8A%A4%ED%83%80%EC%9D%BCLight-mode</a>
<a href="https://github.com/AnubisNekhet/AnuPpuccin/issues/48">https://github.com/AnubisNekhet/AnuPpuccin/issues/48</a>
<a href="https://forum.squarespace.com/topic/180631-how-do-you-change-color-of-italic-text-using-css/">https://forum.squarespace.com/topic/180631-how-do-you-change-color-of-italic-text-using-css/</a>
</p>
</div>]]></content><author><name>Mohitto55</name></author><category term="obsidian" /><category term="css" /><category term="html" /><category term="Obsidian" /><category term="PDF" /><category term="옵시디언" /><summary type="html"><![CDATA[PDF 출력]]></summary></entry><entry><title type="html">[Visual Studio] Nuget Package Manager Console 사용 방법</title><link href="http://localhost:4000/vs/VS-%ED%8C%A8%ED%82%A4%EC%A7%80-%EB%A7%A4%EB%8B%88%EC%A0%80-%EC%BD%98%EC%86%94-%EC%82%AC%EC%9A%A9%EB%B2%95/" rel="alternate" type="text/html" title="[Visual Studio] Nuget Package Manager Console 사용 방법" /><published>2024-04-05T00:00:00+09:00</published><updated>2024-04-05T00:00:00+09:00</updated><id>http://localhost:4000/vs/VS%20%ED%8C%A8%ED%82%A4%EC%A7%80%20%EB%A7%A4%EB%8B%88%EC%A0%80%20%EC%BD%98%EC%86%94%20%EC%82%AC%EC%9A%A9%EB%B2%95</id><content type="html" xml:base="http://localhost:4000/vs/VS-%ED%8C%A8%ED%82%A4%EC%A7%80-%EB%A7%A4%EB%8B%88%EC%A0%80-%EC%BD%98%EC%86%94-%EC%82%AC%EC%9A%A9%EB%B2%95/"><![CDATA[<h2 id="들어가며">들어가며</h2>
<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/66918995-af63-45b2-8696-5bbf16e1e523" alt="image" /></p>

<p>C#을 통해 작업하다보면 외부 라이브러리를 사용해야 할 경우가 있다.
마침 적당한 라이브러리가 보여서 Nuget 패키지를 통해서 찾다보면 검색이 안되는 경우가 있다. 그래서 공식 사이트에가서 설치 방법을 알아보면 저런 설치 명령어가 있는 경우가 있다.</p>

<p>필자도 Itext를 다운 받으려고 했는데 Nuget에서 Itext가 다운이 되지 않아 방법을 찾아보니 저런걸 발견했다. 결론은 C#은 ItextSharp 라는 버전을 따로 설치해야 했던 거지만 말이다.</p>

<p>아무튼 CLI에 치면 될 것 처럼 생겼는데 일반 CMD에서 치면 적용이 안된다. 해당 명령어는 Nuget Package Manager Console이라고 Visual Studio 내부 명령어 창에서 사용해야 한다.</p>

<h2 id="nuget-package-manager-console">Nuget Package Manager Console</h2>
<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/b8fdf5fe-907f-43d7-8547-b980951828d3" alt="image" /></p>

<p>콘솔창을 여는 방법은 도구 &gt; Nuget 패키지 관리자 &gt; 패키지 관리자 콘솔 을 누르면 하단 솔루션 창에 입력이 가능하다.
ItextSharp 버전을 다운 받기위해 아래 명령어를 입력했다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Install-Package ItextSharp
</code></pre></div></div>

<hr />

<h3 id="결과">결과</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>PM&gt; Install-Package itextsharp
C:\Users\admin\source\repos\ITEXT\ITEXT\ITEXT.csproj의 패키지를 복원하는 중...
  CACHE https://api.nuget.org/v3/vulnerabilities/index.json
  CACHE https://api.nuget.org/v3-vulnerabilities/2024.04.03.05.44.44/vulnerability.base.json
  CACHE https://api.nuget.org/v3-vulnerabilities/2024.04.03.05.44.44/2024.04.04.17.44.54/vulnerability.update.json
NuGet 패키지 itextsharp 5.5.13.3을(를) 설치하고 있습니다.
자산 파일을 디스크에 쓰는 중입니다. 경로: C:\Users\admin\source\repos\ITEXT\ITEXT\obj\project.assets.json
C:\Users\admin\source\repos\ITEXT\ITEXT\ITEXT.csproj을(를) 28밀리초 동안 복원했습니다.
ITEXT에 'BouncyCastle 1.8.9'을(를) 설치했습니다.
ITEXT에 'iTextSharp 5.5.13.3'을(를) 설치했습니다.
Nuget 작업 실행 시간: 83밀리초
경과 시간: 00:00:00.1162594
</code></pre></div></div>
<p>결과적으론 잘 다운되어 적용된다.</p>

<div class="Reference">
<div class="callout-header"> </div>
<p>
<a href="https://narup.tistory.com/123">https://narup.tistory.com/123</a>
</p>
</div>]]></content><author><name>Mohitto55</name></author><category term="vs" /><category term="Visual Studio" /><category term="Nuget" /><category term="Nuget Package Manager Console" /><category term="WSL2" /><category term="C#" /><summary type="html"><![CDATA[들어가며]]></summary></entry><entry><title type="html">[Ubuntu] Docker 설치하기</title><link href="http://localhost:4000/linux/Docker-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="[Ubuntu] Docker 설치하기" /><published>2024-03-28T00:00:00+09:00</published><updated>2024-03-28T00:00:00+09:00</updated><id>http://localhost:4000/linux/Docker%20%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/linux/Docker-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/"><![CDATA[<h2 id="도커-다운받기">도커 다운받기</h2>
<h3 id="1-우분투-시스템-패키지-업데이트">1. 우분투 시스템 패키지 업데이트</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get update
</code></pre></div></div>

<h3 id="2-필요한-패키지-설치">2. 필요한 패키지 설치</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
</code></pre></div></div>

<h3 id="3-docker의-공식-gpg키를-추가">3. Docker의 공식 GPG키를 추가</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
</code></pre></div></div>

<h3 id="4-docker의-공식-apt-저장소를-추가">4. Docker의 공식 apt 저장소를 추가</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
</code></pre></div></div>

<h3 id="5-시스템-패키지-업데이트">5. 시스템 패키지 업데이트</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get update
</code></pre></div></div>

<h3 id="6-docker-설치">6. Docker 설치</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get install docker-ce docker-ce-cli containerd.io
</code></pre></div></div>

<h3 id="7-docker가-설치-확인">7. Docker가 설치 확인</h3>
<p>7-1 도커 버전 확인</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker -v
</code></pre></div></div>

<p>7-2 도커 실행상태 확인</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo systemctl status docker
</code></pre></div></div>

<hr />

<div class="Reference">
<div class="callout-header"> </div>
<p>
<a href="https://may9noy.tistory.com/392">https://may9noy.tistory.com/392</a>
</p>
</div>]]></content><author><name>Mohitto55</name></author><category term="linux" /><category term="Window" /><category term="Linux" /><category term="Ubuntu" /><category term="WSL2" /><category term="Window Service for Linux" /><category term="Docker" /><category term="도커" /><category term="우분투" /><category term="윈도우" /><category term="리눅스" /><summary type="html"><![CDATA[도커 다운받기 1. 우분투 시스템 패키지 업데이트 sudo apt-get update]]></summary></entry><entry><title type="html">[Ubuntu] Docker 삭제하기</title><link href="http://localhost:4000/linux/Docker-%EC%99%84%EC%A0%84-%EC%82%AD%EC%A0%9C%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="[Ubuntu] Docker 삭제하기" /><published>2024-03-28T00:00:00+09:00</published><updated>2024-03-28T00:00:00+09:00</updated><id>http://localhost:4000/linux/Docker%20%EC%99%84%EC%A0%84%20%EC%82%AD%EC%A0%9C%ED%95%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/linux/Docker-%EC%99%84%EC%A0%84-%EC%82%AD%EC%A0%9C%ED%95%98%EA%B8%B0/"><![CDATA[<h1 id="docker-삭제하기">Docker 삭제하기</h1>
<h2 id="1-docker-설치-확인하기">1. docker 설치 확인하기</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dpkg -l | grep -i docker
</code></pre></div></div>

<h2 id="2-docker를-삭제">2. docker를 삭제</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get purge -y docker-engine docker docker.io docker-ce
sudo apt-get autoremove -y --purge docker-engine docker docker.io docker-ce
</code></pre></div></div>
<p>위의 명령으로 호스트에서 이미지, 컨테이너, 볼륨 또는 사용자 생성 구성 파일을 제외한 모든 파일을 삭제한다.</p>

<h2 id="3-모든-이미지-컨테이너-및-볼륨을-삭제">​3. 모든 이미지, 컨테이너 및 볼륨을 삭제</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo rm -rf /var/lib/docker /etc/docker
sudo rm /etc/apparmor.d/docker
sudo groupdel docker
sudo rm -rf /var/run/docker.sock
</code></pre></div></div>
<p>시스템에서 Docker를 완전히 제거,</p>

<hr />

<h3 id="우분투에서-삭제하기">우분투에서 삭제하기</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo snap remove docker
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo find / -name "*docker*" -exec `rm -rf` {} +
</code></pre></div></div>
<p>모든 docker 관련 파일을 삭제</p>

<hr />

<div class="Reference">
<div class="callout-header"> </div>
<p>
<a href="https://may9noy.tistory.com/392">https://may9noy.tistory.com/392</a>
</p>
</div>]]></content><author><name>Mohitto55</name></author><category term="linux" /><category term="Window" /><category term="Linux" /><category term="Ubuntu" /><category term="WSL2" /><category term="Window Service for Linux" /><category term="Docker" /><category term="도커" /><category term="우분투" /><category term="윈도우" /><category term="리눅스" /><summary type="html"><![CDATA[Docker 삭제하기 1. docker 설치 확인하기 dpkg -l | grep -i docker]]></summary></entry><entry><title type="html">[Math] 데카르트 좌표계와 극 좌표계</title><link href="http://localhost:4000/math/%EC%A2%8C%ED%91%9C%EA%B3%84-%EC%A0%95%EB%A6%AC/" rel="alternate" type="text/html" title="[Math] 데카르트 좌표계와 극 좌표계" /><published>2024-03-25T00:00:00+09:00</published><updated>2024-03-25T00:00:00+09:00</updated><id>http://localhost:4000/math/%EC%A2%8C%ED%91%9C%EA%B3%84%20%EC%A0%95%EB%A6%AC</id><content type="html" xml:base="http://localhost:4000/math/%EC%A2%8C%ED%91%9C%EA%B3%84-%EC%A0%95%EB%A6%AC/"><![CDATA[<h2 id="들어가기">들어가기</h2>
<p>좌표는 우리 일상 생활에서 중요한 요소다. 사람과의 거리, 건축, 컴퓨터 등 다양한 분야에서 사용하는 개념이다. 좌표계는 고대에도 사용된 개념인데 천문학자들이 별의 위치를 추정하기 위하여 사용하곤 했다.</p>

<p>오늘은 우리 일상과 빠트릴 수 없는 좌표계에 대하여 알아볼 것이다.</p>
<h2 id="좌표계란">좌표계란</h2>
<ul>
  <li>공간에 대해서 위치를 숫자나 가하학 요소를 이용해 나타낸 것이다</li>
</ul>

<h2 id="데카르트-좌표계cartesian-coordinate-system">데카르트 좌표계(Cartesian coordinate system)</h2>
<ul>
  <li>좌표평명의 2D좌표계다</li>
  <li>
    <p>2차원 평면에서 X,Y축 한쌍으로 표현</p>
  </li>
  <li>사분면
    <ul>
      <li>1사분면 : X값이 +, Y값이 +인 사분면</li>
      <li>2사분면 : X값이 -, Y값이 +인 사분면</li>
      <li>3사분면 : X값이 -, Y값이 -인 사분면</li>
      <li>4사분면 : X값이 +, Y값이 -인 사분면</li>
    </ul>
  </li>
</ul>

<hr />

<h3 id="게임서의-2차원-좌표계">게임서의 2차원 좌표계</h3>

<ul>
  <li>2D 게임의 일반 좌표계</li>
</ul>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/a1349719-a21d-41c8-9938-8f8e6a577bcd" alt="image" /><em>그래픽 라이브러리 별 UV 좌표</em></p>

<ul>
  <li>UV 좌표계
    <ul>
      <li>맵핑 - 메쉬에 텍스쳐를 입힐 때 사용한다.</li>
      <li>기획자랑 얘기하여 좌표계를 정해야 한다.</li>
      <li>일반 좌표계로 바꿔 만들면 음수가 생길 수 있다.</li>
      <li>기획자와 뒤집힌 좌표계로 할지 일반 좌표계로 할지 정해야 한다.</li>
      <li>변경하면 수를 변형할 함수 제작 필요</li>
    </ul>
  </li>
  <li>데카르트 좌표계
    <ul>
      <li>좌표공간 3차원 좌표계</li>
      <li>x,y,z축을 한 쌍으로 표현 (x,y,z)</li>
    </ul>
  </li>
</ul>

<hr />

<h3 id="왼손좌표계-오른손-좌표계">왼손좌표계 오른손 좌표계</h3>
<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/49fc4103-b66f-43fe-ae14-a7d04b9e295d" alt="image" /></p>

<ul>
  <li>엄지, 검지, <strong>중지</strong>는 각각 X Y Z 를 바라보게 한다.</li>
  <li>중지의 방향만 바꿔준다</li>
</ul>

<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/c5479b25-00cf-4ef2-b809-29a1d65c1d89" alt="image" /><em>엔진별 좌표계</em></p>

<ul>
  <li>게임 엔진에 따라서 다르다</li>
  <li>왼손 좌표계 - Unity, DirectX UnreaEngine</li>
  <li>오른손 좌표계 - OpenGL, 3DSMax</li>
  <li>좌표계가 서로 다른 이유는 OpenGL이 먼저 나왔는데 다렉, 유니티는 게임 개발 친화적으로 좌표를 바꿔서 그렇다</li>
</ul>

<hr />

<h3 id="좌표계-회전하기">좌표계 회전하기</h3>
<p>좌표계 회전하기
바꿀려는 좌표계의 손 좌표계를 설정한다.
손 좌표계를 기준으로 손이 감기는 방향 생각하기
<strong>엄지</strong>를 기준으로 회전축 잡기</p>

<h2 id="극좌표계">극좌표계</h2>
<p><img src="https://github.com/mohitto55/mohitto55.github.io/assets/154340583/ccd0da52-3c34-40ed-a354-a7cb62685321" alt="image" /></p>

<ul>
  <li>2D 평면상의 점의 위치를 원점과 거리와 X축 각도만 이용해 점의 위치 표현
    <ul>
      <li>원점과의 거리 = r</li>
      <li>X각도 = \(\theta\)</li>
      <li>(r, \(\theta\))</li>
    </ul>
  </li>
</ul>

<h3 id="극좌표계-요소-구하기">극좌표계 요소 구하기</h3>

\[r = \sqrt{x^{2} + y^{2}}\]

\[\theta = atan2(y,x)\]

<h3 id="데카르드-좌표계-요소-구하기">데카르드 좌표계 요소 구하기</h3>

\[x = r * cos\theta\]

\[y = r* sin\theta\]]]></content><author><name>Mohitto55</name></author><category term="math" /><category term="데카르트 좌표계" /><category term="Cartesian coordinate system" /><category term="극 좌표계" /><category term="Polar coordinate system" /><summary type="html"><![CDATA[들어가기 좌표는 우리 일상 생활에서 중요한 요소다. 사람과의 거리, 건축, 컴퓨터 등 다양한 분야에서 사용하는 개념이다. 좌표계는 고대에도 사용된 개념인데 천문학자들이 별의 위치를 추정하기 위하여 사용하곤 했다.]]></summary></entry></feed>